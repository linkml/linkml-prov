{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Prov schema prov Classes Activity - An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities. Agent - An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. @en Organization - An organization is a social or legal institution such as a company, society, etc. Person - Person agents are people.@en SoftwareAgent - A software agent is running software.@en Entity - An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary. @en Bundle - A bundle is a named set of provenance descriptions, and is itself an Entity, so allowing provenance of provenance to be expressed.@en Collection - A collection is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the collections.@en EmptyCollection - An empty collection is a collection without members.@en Plan - A plan is an entity that represents a set of actions or steps intended by one or more agents to achieve some goals. Influence - Influence is the capacity of an entity, activity, or agent to have an effect on the character, development, or behavior of another by means of usage, start, end, generation, invalidation, communication, derivation, attribution, association, or delegation.@en ActivityInfluence Communication - Communication is the exchange of an entity by two activities, one activity using the entity generated by the other. AgentInfluence Association - An activity association is an assignment of responsibility to an agent for an activity, indicating that the agent had a role in the activity. It further allows for a plan to be specified, which is the plan intended by the agent to achieve some goals in the context of this activity.@en Attribution - Attribution is the ascribing of an entity to an agent. Delegation - Delegation is the assignment of authority and responsibility to an agent (by itself or by another agent) to carry out a specific activity as a delegate or representative, while the agent it acts on behalf of retains some responsibility for the outcome of the delegated work. EntityInfluence Derivation - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en PrimarySource - A primary source for a topic refers to something produced by some agent with direct experience and knowledge about the topic, at the time of the topic's study, without benefit from hindsight. Quotation - A quotation is the repeat of (some or all of) an entity, such as text or image, by someone who may or may not be its original author. Quotation is a particular case of derivation.@en Revision - A revision is a derivation for which the resulting entity is a revised version of some original. The implication here is that the resulting entity contains substantial content from the original. Revision is a particular case of derivation.@en InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en End - End is when an activity is deemed to have been ended by an entity, known as trigger. The activity no longer exists after its end. Any usage, generation, or invalidation involving an activity precedes the activity's end. An end may refer to a trigger entity that terminated the activity, or to an activity, known as ender that generated the trigger.@en Generation - Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.@en Invalidation - Invalidation is the start of the destruction, cessation, or expiry of an existing entity by an activity. The entity is no longer available for use (or further invalidation) after invalidation. Any generation or usage of an entity precedes its invalidation. Start - Start is when an activity is deemed to have been started by an entity, known as trigger. The activity did not exist before its start. Any usage, generation, or invalidation involving an activity follows the activity's start. A start may refer to a trigger entity that set off the activity, or to an activity, known as starter, that generated the trigger.@en Usage - Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not begun to utilize this entity and could not have been affected by the entity.@en Location - A location can be an identifiable geographic place (ISO 19112), but it can also be a non-geographic place such as a directory, row, or column. As such, there are numerous ways in which location can be expressed, such as by a coordinate, address, landmark, and so forth.@en Role - A role is the function of an entity or agent with respect to an activity, in the context of a usage, generation, invalidation, association, start, and end.@en Thing Mixins Slots alternateOf - Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en specializationOf - An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en atLocation atTime category comment component definition editorsDefinition editorialNote endedAtTime generatedAtTime hadActivity hadGeneration hadPlan hadRole hadUsage influenced generated invalidated influencer activity agent entity invalidatedAtTime inverse isDefinedBy label order qualifiedInfluence qualifiedAssociation qualifiedAttribution qualifiedCommunication qualifiedDelegation qualifiedDerivation qualifiedEnd qualifiedGeneration qualifiedInvalidation qualifiedPrimarySource qualifiedQuotation qualifiedRevision qualifiedStart qualifiedUsage seeAlso aq constraints dm n qualifiedForm sharesDefinitionWith unqualifiedForm startedAtTime todo value - Provides a value that is a direct representation of an entity.@en versionInfo wasInfluencedBy actedOnBehalfOf hadMember used wasAssociatedWith wasAttributedTo - Attribution is the ascribing of an entity to an agent.@en wasDerivedFrom - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en hadPrimarySource wasQuotedFrom wasRevisionOf wasEndedBy wasGeneratedBy wasInformedBy wasInvalidatedBy wasStartedBy Enums Types Built in Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str Defined Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer Ncname ( NCName ) - Prefix part of CURIE Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Index"},{"location":"#prov-schema","text":"prov","title":"Prov schema"},{"location":"#classes","text":"Activity - An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities. Agent - An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. @en Organization - An organization is a social or legal institution such as a company, society, etc. Person - Person agents are people.@en SoftwareAgent - A software agent is running software.@en Entity - An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary. @en Bundle - A bundle is a named set of provenance descriptions, and is itself an Entity, so allowing provenance of provenance to be expressed.@en Collection - A collection is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the collections.@en EmptyCollection - An empty collection is a collection without members.@en Plan - A plan is an entity that represents a set of actions or steps intended by one or more agents to achieve some goals. Influence - Influence is the capacity of an entity, activity, or agent to have an effect on the character, development, or behavior of another by means of usage, start, end, generation, invalidation, communication, derivation, attribution, association, or delegation.@en ActivityInfluence Communication - Communication is the exchange of an entity by two activities, one activity using the entity generated by the other. AgentInfluence Association - An activity association is an assignment of responsibility to an agent for an activity, indicating that the agent had a role in the activity. It further allows for a plan to be specified, which is the plan intended by the agent to achieve some goals in the context of this activity.@en Attribution - Attribution is the ascribing of an entity to an agent. Delegation - Delegation is the assignment of authority and responsibility to an agent (by itself or by another agent) to carry out a specific activity as a delegate or representative, while the agent it acts on behalf of retains some responsibility for the outcome of the delegated work. EntityInfluence Derivation - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en PrimarySource - A primary source for a topic refers to something produced by some agent with direct experience and knowledge about the topic, at the time of the topic's study, without benefit from hindsight. Quotation - A quotation is the repeat of (some or all of) an entity, such as text or image, by someone who may or may not be its original author. Quotation is a particular case of derivation.@en Revision - A revision is a derivation for which the resulting entity is a revised version of some original. The implication here is that the resulting entity contains substantial content from the original. Revision is a particular case of derivation.@en InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en End - End is when an activity is deemed to have been ended by an entity, known as trigger. The activity no longer exists after its end. Any usage, generation, or invalidation involving an activity precedes the activity's end. An end may refer to a trigger entity that terminated the activity, or to an activity, known as ender that generated the trigger.@en Generation - Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.@en Invalidation - Invalidation is the start of the destruction, cessation, or expiry of an existing entity by an activity. The entity is no longer available for use (or further invalidation) after invalidation. Any generation or usage of an entity precedes its invalidation. Start - Start is when an activity is deemed to have been started by an entity, known as trigger. The activity did not exist before its start. Any usage, generation, or invalidation involving an activity follows the activity's start. A start may refer to a trigger entity that set off the activity, or to an activity, known as starter, that generated the trigger.@en Usage - Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not begun to utilize this entity and could not have been affected by the entity.@en Location - A location can be an identifiable geographic place (ISO 19112), but it can also be a non-geographic place such as a directory, row, or column. As such, there are numerous ways in which location can be expressed, such as by a coordinate, address, landmark, and so forth.@en Role - A role is the function of an entity or agent with respect to an activity, in the context of a usage, generation, invalidation, association, start, and end.@en Thing","title":"Classes"},{"location":"#mixins","text":"","title":"Mixins"},{"location":"#slots","text":"alternateOf - Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en specializationOf - An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en atLocation atTime category comment component definition editorsDefinition editorialNote endedAtTime generatedAtTime hadActivity hadGeneration hadPlan hadRole hadUsage influenced generated invalidated influencer activity agent entity invalidatedAtTime inverse isDefinedBy label order qualifiedInfluence qualifiedAssociation qualifiedAttribution qualifiedCommunication qualifiedDelegation qualifiedDerivation qualifiedEnd qualifiedGeneration qualifiedInvalidation qualifiedPrimarySource qualifiedQuotation qualifiedRevision qualifiedStart qualifiedUsage seeAlso aq constraints dm n qualifiedForm sharesDefinitionWith unqualifiedForm startedAtTime todo value - Provides a value that is a direct representation of an entity.@en versionInfo wasInfluencedBy actedOnBehalfOf hadMember used wasAssociatedWith wasAttributedTo - Attribution is the ascribing of an entity to an agent.@en wasDerivedFrom - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en hadPrimarySource wasQuotedFrom wasRevisionOf wasEndedBy wasGeneratedBy wasInformedBy wasInvalidatedBy wasStartedBy","title":"Slots"},{"location":"#enums","text":"","title":"Enums"},{"location":"#types","text":"","title":"Types"},{"location":"#built-in","text":"Bool Decimal ElementIdentifier NCName NodeIdentifier URI URIorCURIE XSDDate XSDDateTime XSDTime float int str","title":"Built in"},{"location":"#defined","text":"Boolean ( Bool ) - A binary (true or false) value Date ( XSDDate ) - a date (year, month and day) in an idealized calendar Datetime ( XSDDateTime ) - The combination of a date and time Decimal ( Decimal ) - A real number with arbitrary precision that conforms to the xsd:decimal specification Double ( float ) - A real number that conforms to the xsd:double specification Float ( float ) - A real number that conforms to the xsd:float specification Integer ( int ) - An integer Ncname ( NCName ) - Prefix part of CURIE Nodeidentifier ( NodeIdentifier ) - A URI, CURIE or BNODE that represents a node in a model. Objectidentifier ( ElementIdentifier ) - A URI or CURIE that represents an object in the model. String ( str ) - A character string Time ( XSDTime ) - A time object represents a (local) time of day, independent of any particular day Uri ( URI ) - a complete URI Uriorcurie ( URIorCURIE ) - a URI or a CURIE","title":"Defined"},{"location":"ActivityInfluence/","text":"Class: ActivityInfluence URI: linkml_prov:ActivityInfluence Parents is_a: Influence - Influence is the capacity of an entity, activity, or agent to have an effect on the character, development, or behavior of another by means of usage, start, end, generation, invalidation, communication, derivation, attribution, association, or delegation.@en Children Communication - Communication is the exchange of an entity by two activities, one activity using the entity generated by the other. Mixin for Generation (mixin) - Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.@en Invalidation (mixin) - Invalidation is the start of the destruction, cessation, or expiry of an existing entity by an activity. The entity is no longer available for use (or further invalidation) after invalidation. Any generation or usage of an entity precedes its invalidation. Referenced by class Attributes Own activity OPT range: Activity Inherited from Influence: hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing Other properties Mappings: prov:ActivityInfluence Comments: ActivityInfluence provides additional descriptions of an Activity's binary influence upon any other kind of resource. Instances of ActivityInfluence use the prov:activity property to cite the influencing Activity.@en It is not recommended that the type ActivityInfluence be asserted without also asserting one of its more specific subclasses.@en","title":"Class: ActivityInfluence"},{"location":"ActivityInfluence/#class-activityinfluence","text":"URI: linkml_prov:ActivityInfluence","title":"Class: ActivityInfluence"},{"location":"ActivityInfluence/#parents","text":"is_a: Influence - Influence is the capacity of an entity, activity, or agent to have an effect on the character, development, or behavior of another by means of usage, start, end, generation, invalidation, communication, derivation, attribution, association, or delegation.@en","title":"Parents"},{"location":"ActivityInfluence/#children","text":"Communication - Communication is the exchange of an entity by two activities, one activity using the entity generated by the other.","title":"Children"},{"location":"ActivityInfluence/#mixin-for","text":"Generation (mixin) - Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.@en Invalidation (mixin) - Invalidation is the start of the destruction, cessation, or expiry of an existing entity by an activity. The entity is no longer available for use (or further invalidation) after invalidation. Any generation or usage of an entity precedes its invalidation.","title":"Mixin for"},{"location":"ActivityInfluence/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"ActivityInfluence/#attributes","text":"","title":"Attributes"},{"location":"ActivityInfluence/#own","text":"activity OPT range: Activity","title":"Own"},{"location":"ActivityInfluence/#inherited-from-influence","text":"hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing","title":"Inherited from Influence:"},{"location":"ActivityInfluence/#other-properties","text":"Mappings: prov:ActivityInfluence Comments: ActivityInfluence provides additional descriptions of an Activity's binary influence upon any other kind of resource. Instances of ActivityInfluence use the prov:activity property to cite the influencing Activity.@en It is not recommended that the type ActivityInfluence be asserted without also asserting one of its more specific subclasses.@en","title":"Other properties"},{"location":"AgentInfluence/","text":"Class: AgentInfluence URI: linkml_prov:AgentInfluence Parents is_a: Influence - Influence is the capacity of an entity, activity, or agent to have an effect on the character, development, or behavior of another by means of usage, start, end, generation, invalidation, communication, derivation, attribution, association, or delegation.@en Children Association - An activity association is an assignment of responsibility to an agent for an activity, indicating that the agent had a role in the activity. It further allows for a plan to be specified, which is the plan intended by the agent to achieve some goals in the context of this activity.@en Attribution - Attribution is the ascribing of an entity to an agent. Delegation - Delegation is the assignment of authority and responsibility to an agent (by itself or by another agent) to carry out a specific activity as a delegate or representative, while the agent it acts on behalf of retains some responsibility for the outcome of the delegated work. Referenced by class Attributes Own agent OPT range: Agent Inherited from Influence: hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing Other properties Mappings: prov:AgentInfluence Comments: AgentInfluence provides additional descriptions of an Agent's binary influence upon any other kind of resource. Instances of AgentInfluence use the prov:agent property to cite the influencing Agent.@en It is not recommended that the type AgentInfluence be asserted without also asserting one of its more specific subclasses.@en","title":"Class: AgentInfluence"},{"location":"AgentInfluence/#class-agentinfluence","text":"URI: linkml_prov:AgentInfluence","title":"Class: AgentInfluence"},{"location":"AgentInfluence/#parents","text":"is_a: Influence - Influence is the capacity of an entity, activity, or agent to have an effect on the character, development, or behavior of another by means of usage, start, end, generation, invalidation, communication, derivation, attribution, association, or delegation.@en","title":"Parents"},{"location":"AgentInfluence/#children","text":"Association - An activity association is an assignment of responsibility to an agent for an activity, indicating that the agent had a role in the activity. It further allows for a plan to be specified, which is the plan intended by the agent to achieve some goals in the context of this activity.@en Attribution - Attribution is the ascribing of an entity to an agent. Delegation - Delegation is the assignment of authority and responsibility to an agent (by itself or by another agent) to carry out a specific activity as a delegate or representative, while the agent it acts on behalf of retains some responsibility for the outcome of the delegated work.","title":"Children"},{"location":"AgentInfluence/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"AgentInfluence/#attributes","text":"","title":"Attributes"},{"location":"AgentInfluence/#own","text":"agent OPT range: Agent","title":"Own"},{"location":"AgentInfluence/#inherited-from-influence","text":"hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing","title":"Inherited from Influence:"},{"location":"AgentInfluence/#other-properties","text":"Mappings: prov:AgentInfluence Comments: AgentInfluence provides additional descriptions of an Agent's binary influence upon any other kind of resource. Instances of AgentInfluence use the prov:agent property to cite the influencing Agent.@en It is not recommended that the type AgentInfluence be asserted without also asserting one of its more specific subclasses.@en","title":"Other properties"},{"location":"Association/","text":"Class: Association An activity association is an assignment of responsibility to an agent for an activity, indicating that the agent had a role in the activity. It further allows for a plan to be specified, which is the plan intended by the agent to achieve some goals in the context of this activity.@en URI: linkml_prov:Association Parents is_a: AgentInfluence Referenced by class None qualifiedAssociation OPT Association Attributes Own hadPlan OPT range: Plan hadRole OPT range: Role Inherited from AgentInfluence: agent OPT range: Agent hadActivity OPT range: Activity influencer OPT range: Thing Other properties Mappings: prov:Association Comments: An instance of prov:Association provides additional descriptions about the binary prov:wasAssociatedWith relation from an prov:Activity to some prov:Agent that had some responsiblity for it. For example, :baking prov:wasAssociatedWith :baker; prov:qualifiedAssociation [ a prov:Association; prov:agent :baker; :foo :bar ].@en","title":"Class: Association"},{"location":"Association/#class-association","text":"An activity association is an assignment of responsibility to an agent for an activity, indicating that the agent had a role in the activity. It further allows for a plan to be specified, which is the plan intended by the agent to achieve some goals in the context of this activity.@en URI: linkml_prov:Association","title":"Class: Association"},{"location":"Association/#parents","text":"is_a: AgentInfluence","title":"Parents"},{"location":"Association/#referenced-by-class","text":"None qualifiedAssociation OPT Association","title":"Referenced by class"},{"location":"Association/#attributes","text":"","title":"Attributes"},{"location":"Association/#own","text":"hadPlan OPT range: Plan hadRole OPT range: Role","title":"Own"},{"location":"Association/#inherited-from-agentinfluence","text":"agent OPT range: Agent hadActivity OPT range: Activity influencer OPT range: Thing","title":"Inherited from AgentInfluence:"},{"location":"Association/#other-properties","text":"Mappings: prov:Association Comments: An instance of prov:Association provides additional descriptions about the binary prov:wasAssociatedWith relation from an prov:Activity to some prov:Agent that had some responsiblity for it. For example, :baking prov:wasAssociatedWith :baker; prov:qualifiedAssociation [ a prov:Association; prov:agent :baker; :foo :bar ].@en","title":"Other properties"},{"location":"Attribution/","text":"Class: Attribution Attribution is the ascribing of an entity to an agent. When an entity e is attributed to agent ag, entity e was generated by some unspecified activity that in turn was associated to agent ag. Thus, this relation is useful when the activity is not known, or irrelevant.@en URI: linkml_prov:Attribution Parents is_a: AgentInfluence Referenced by class None qualifiedAttribution OPT Attribution Attributes Inherited from AgentInfluence: agent OPT range: Agent hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing Other properties Mappings: prov:Attribution Comments: An instance of prov:Attribution provides additional descriptions about the binary prov:wasAttributedTo relation from an prov:Entity to some prov:Agent that had some responsible for it. For example, :cake prov:wasAttributedTo :baker; prov:qualifiedAttribution [ a prov:Attribution; prov:entity :baker; :foo :bar ].@en","title":"Class: Attribution"},{"location":"Attribution/#class-attribution","text":"Attribution is the ascribing of an entity to an agent. When an entity e is attributed to agent ag, entity e was generated by some unspecified activity that in turn was associated to agent ag. Thus, this relation is useful when the activity is not known, or irrelevant.@en URI: linkml_prov:Attribution","title":"Class: Attribution"},{"location":"Attribution/#parents","text":"is_a: AgentInfluence","title":"Parents"},{"location":"Attribution/#referenced-by-class","text":"None qualifiedAttribution OPT Attribution","title":"Referenced by class"},{"location":"Attribution/#attributes","text":"","title":"Attributes"},{"location":"Attribution/#inherited-from-agentinfluence","text":"agent OPT range: Agent hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing","title":"Inherited from AgentInfluence:"},{"location":"Attribution/#other-properties","text":"Mappings: prov:Attribution Comments: An instance of prov:Attribution provides additional descriptions about the binary prov:wasAttributedTo relation from an prov:Entity to some prov:Agent that had some responsible for it. For example, :cake prov:wasAttributedTo :baker; prov:qualifiedAttribution [ a prov:Attribution; prov:entity :baker; :foo :bar ].@en","title":"Other properties"},{"location":"Boolean/","text":"Type: Boolean A binary (true or false) value URI: linkml:Boolean Root (builtin) type Bool Representation bool","title":"Type: Boolean"},{"location":"Boolean/#type-boolean","text":"A binary (true or false) value URI: linkml:Boolean Root (builtin) type Bool Representation bool","title":"Type: Boolean"},{"location":"Bundle/","text":"Class: Bundle A bundle is a named set of provenance descriptions, and is itself an Entity, so allowing provenance of provenance to be expressed.@en URI: linkml_prov:Bundle Parents is_a: Entity - An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary. @en Attributes Inherited from Entity: alternateOf OPT Description: Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en range: Entity atLocation OPT range: Location generatedAtTime OPT range: String hadPrimarySource OPT range: Entity invalidatedAtTime OPT range: String qualifiedAttribution OPT range: Attribution qualifiedDerivation OPT range: Derivation qualifiedGeneration OPT range: Generation qualifiedInfluence OPT range: Influence qualifiedInvalidation OPT range: Invalidation qualifiedPrimarySource OPT range: PrimarySource qualifiedQuotation OPT range: Quotation qualifiedRevision OPT range: Revision specializationOf OPT Description: An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en range: Entity value OPT Description: Provides a value that is a direct representation of an entity.@en range: String wasAttributedTo OPT Description: Attribution is the ascribing of an entity to an agent.@en range: Agent wasDerivedFrom OPT Description: A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en range: Entity wasGeneratedBy OPT range: Activity wasInfluencedBy OPT range: String wasInvalidatedBy OPT range: Activity wasQuotedFrom OPT range: Entity wasRevisionOf OPT range: Entity Other properties Mappings: prov:Bundle Comments: Note that there are kinds of bundles (e.g. handwritten letters, audio recordings, etc.) that are not expressed in PROV-O, but can be still be described by PROV-O.@en","title":"Class: Bundle"},{"location":"Bundle/#class-bundle","text":"A bundle is a named set of provenance descriptions, and is itself an Entity, so allowing provenance of provenance to be expressed.@en URI: linkml_prov:Bundle","title":"Class: Bundle"},{"location":"Bundle/#parents","text":"is_a: Entity - An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary. @en","title":"Parents"},{"location":"Bundle/#attributes","text":"","title":"Attributes"},{"location":"Bundle/#inherited-from-entity","text":"alternateOf OPT Description: Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en range: Entity atLocation OPT range: Location generatedAtTime OPT range: String hadPrimarySource OPT range: Entity invalidatedAtTime OPT range: String qualifiedAttribution OPT range: Attribution qualifiedDerivation OPT range: Derivation qualifiedGeneration OPT range: Generation qualifiedInfluence OPT range: Influence qualifiedInvalidation OPT range: Invalidation qualifiedPrimarySource OPT range: PrimarySource qualifiedQuotation OPT range: Quotation qualifiedRevision OPT range: Revision specializationOf OPT Description: An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en range: Entity value OPT Description: Provides a value that is a direct representation of an entity.@en range: String wasAttributedTo OPT Description: Attribution is the ascribing of an entity to an agent.@en range: Agent wasDerivedFrom OPT Description: A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en range: Entity wasGeneratedBy OPT range: Activity wasInfluencedBy OPT range: String wasInvalidatedBy OPT range: Activity wasQuotedFrom OPT range: Entity wasRevisionOf OPT range: Entity","title":"Inherited from Entity:"},{"location":"Bundle/#other-properties","text":"Mappings: prov:Bundle Comments: Note that there are kinds of bundles (e.g. handwritten letters, audio recordings, etc.) that are not expressed in PROV-O, but can be still be described by PROV-O.@en","title":"Other properties"},{"location":"Collection/","text":"Class: Collection A collection is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the collections.@en URI: linkml_prov:Collection Parents is_a: Entity - An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary. @en Children EmptyCollection - An empty collection is a collection without members.@en Referenced by class Attributes Own hadMember OPT range: Entity Inherited from Entity: alternateOf OPT Description: Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en range: Entity atLocation OPT range: Location generatedAtTime OPT range: String hadPrimarySource OPT range: Entity invalidatedAtTime OPT range: String qualifiedAttribution OPT range: Attribution qualifiedDerivation OPT range: Derivation qualifiedGeneration OPT range: Generation qualifiedInfluence OPT range: Influence qualifiedInvalidation OPT range: Invalidation qualifiedPrimarySource OPT range: PrimarySource qualifiedQuotation OPT range: Quotation qualifiedRevision OPT range: Revision specializationOf OPT Description: An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en range: Entity value OPT Description: Provides a value that is a direct representation of an entity.@en range: String wasAttributedTo OPT Description: Attribution is the ascribing of an entity to an agent.@en range: Agent wasDerivedFrom OPT Description: A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en range: Entity wasGeneratedBy OPT range: Activity wasInfluencedBy OPT range: String wasInvalidatedBy OPT range: Activity wasQuotedFrom OPT range: Entity wasRevisionOf OPT range: Entity Other properties Mappings: prov:Collection","title":"Class: Collection"},{"location":"Collection/#class-collection","text":"A collection is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the collections.@en URI: linkml_prov:Collection","title":"Class: Collection"},{"location":"Collection/#parents","text":"is_a: Entity - An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary. @en","title":"Parents"},{"location":"Collection/#children","text":"EmptyCollection - An empty collection is a collection without members.@en","title":"Children"},{"location":"Collection/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"Collection/#attributes","text":"","title":"Attributes"},{"location":"Collection/#own","text":"hadMember OPT range: Entity","title":"Own"},{"location":"Collection/#inherited-from-entity","text":"alternateOf OPT Description: Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en range: Entity atLocation OPT range: Location generatedAtTime OPT range: String hadPrimarySource OPT range: Entity invalidatedAtTime OPT range: String qualifiedAttribution OPT range: Attribution qualifiedDerivation OPT range: Derivation qualifiedGeneration OPT range: Generation qualifiedInfluence OPT range: Influence qualifiedInvalidation OPT range: Invalidation qualifiedPrimarySource OPT range: PrimarySource qualifiedQuotation OPT range: Quotation qualifiedRevision OPT range: Revision specializationOf OPT Description: An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en range: Entity value OPT Description: Provides a value that is a direct representation of an entity.@en range: String wasAttributedTo OPT Description: Attribution is the ascribing of an entity to an agent.@en range: Agent wasDerivedFrom OPT Description: A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en range: Entity wasGeneratedBy OPT range: Activity wasInfluencedBy OPT range: String wasInvalidatedBy OPT range: Activity wasQuotedFrom OPT range: Entity wasRevisionOf OPT range: Entity","title":"Inherited from Entity:"},{"location":"Collection/#other-properties","text":"Mappings: prov:Collection","title":"Other properties"},{"location":"Communication/","text":"Class: Communication Communication is the exchange of an entity by two activities, one activity using the entity generated by the other. URI: linkml_prov:Communication Parents is_a: ActivityInfluence Referenced by class None qualifiedCommunication OPT Communication Attributes Inherited from ActivityInfluence: activity OPT range: Activity hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing Other properties Mappings: prov:Communication Comments: An instance of prov:Communication provides additional descriptions about the binary prov:wasInformedBy relation from an informed prov:Activity to the prov:Activity that informed it. For example, :you_jumping_off_bridge prov:wasInformedBy :everyone_else_jumping_off_bridge; prov:qualifiedCommunication [ a prov:Communication; prov:activity :everyone_else_jumping_off_bridge; :foo :bar ].@en","title":"Class: Communication"},{"location":"Communication/#class-communication","text":"Communication is the exchange of an entity by two activities, one activity using the entity generated by the other. URI: linkml_prov:Communication","title":"Class: Communication"},{"location":"Communication/#parents","text":"is_a: ActivityInfluence","title":"Parents"},{"location":"Communication/#referenced-by-class","text":"None qualifiedCommunication OPT Communication","title":"Referenced by class"},{"location":"Communication/#attributes","text":"","title":"Attributes"},{"location":"Communication/#inherited-from-activityinfluence","text":"activity OPT range: Activity hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing","title":"Inherited from ActivityInfluence:"},{"location":"Communication/#other-properties","text":"Mappings: prov:Communication Comments: An instance of prov:Communication provides additional descriptions about the binary prov:wasInformedBy relation from an informed prov:Activity to the prov:Activity that informed it. For example, :you_jumping_off_bridge prov:wasInformedBy :everyone_else_jumping_off_bridge; prov:qualifiedCommunication [ a prov:Communication; prov:activity :everyone_else_jumping_off_bridge; :foo :bar ].@en","title":"Other properties"},{"location":"Date/","text":"Type: Date a date (year, month and day) in an idealized calendar URI: linkml:Date Root (builtin) type XSDDate Representation str","title":"Type: Date"},{"location":"Date/#type-date","text":"a date (year, month and day) in an idealized calendar URI: linkml:Date Root (builtin) type XSDDate Representation str","title":"Type: Date"},{"location":"Datetime/","text":"Type: Datetime The combination of a date and time URI: linkml:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: Datetime"},{"location":"Datetime/#type-datetime","text":"The combination of a date and time URI: linkml:Datetime Root (builtin) type XSDDateTime Representation str","title":"Type: Datetime"},{"location":"Decimal/","text":"Type: Decimal A real number with arbitrary precision that conforms to the xsd:decimal specification URI: linkml:Decimal Root (builtin) type Decimal","title":"Type: Decimal"},{"location":"Decimal/#type-decimal","text":"A real number with arbitrary precision that conforms to the xsd:decimal specification URI: linkml:Decimal Root (builtin) type Decimal","title":"Type: Decimal"},{"location":"Delegation/","text":"Class: Delegation Delegation is the assignment of authority and responsibility to an agent (by itself or by another agent) to carry out a specific activity as a delegate or representative, while the agent it acts on behalf of retains some responsibility for the outcome of the delegated work. For example, a student acted on behalf of his supervisor, who acted on behalf of the department chair, who acted on behalf of the university; all those agents are responsible in some way for the activity that took place but we do not say explicitly who bears responsibility and to what degree.@en URI: linkml_prov:Delegation Parents is_a: AgentInfluence Referenced by class None qualifiedDelegation OPT Delegation Attributes Own hadActivity OPT range: Activity Inherited from AgentInfluence: agent OPT range: Agent hadRole OPT range: Role influencer OPT range: Thing Other properties Mappings: prov:Delegation Comments: An instance of prov:Delegation provides additional descriptions about the binary prov:actedOnBehalfOf relation from a performing prov:Agent to some prov:Agent for whom it was performed. For example, :mixing prov:wasAssociatedWith :toddler . :toddler prov:actedOnBehalfOf :mother; prov:qualifiedDelegation [ a prov:Delegation; prov:entity :mother; :foo :bar ].@en","title":"Class: Delegation"},{"location":"Delegation/#class-delegation","text":"Delegation is the assignment of authority and responsibility to an agent (by itself or by another agent) to carry out a specific activity as a delegate or representative, while the agent it acts on behalf of retains some responsibility for the outcome of the delegated work. For example, a student acted on behalf of his supervisor, who acted on behalf of the department chair, who acted on behalf of the university; all those agents are responsible in some way for the activity that took place but we do not say explicitly who bears responsibility and to what degree.@en URI: linkml_prov:Delegation","title":"Class: Delegation"},{"location":"Delegation/#parents","text":"is_a: AgentInfluence","title":"Parents"},{"location":"Delegation/#referenced-by-class","text":"None qualifiedDelegation OPT Delegation","title":"Referenced by class"},{"location":"Delegation/#attributes","text":"","title":"Attributes"},{"location":"Delegation/#own","text":"hadActivity OPT range: Activity","title":"Own"},{"location":"Delegation/#inherited-from-agentinfluence","text":"agent OPT range: Agent hadRole OPT range: Role influencer OPT range: Thing","title":"Inherited from AgentInfluence:"},{"location":"Delegation/#other-properties","text":"Mappings: prov:Delegation Comments: An instance of prov:Delegation provides additional descriptions about the binary prov:actedOnBehalfOf relation from a performing prov:Agent to some prov:Agent for whom it was performed. For example, :mixing prov:wasAssociatedWith :toddler . :toddler prov:actedOnBehalfOf :mother; prov:qualifiedDelegation [ a prov:Delegation; prov:entity :mother; :foo :bar ].@en","title":"Other properties"},{"location":"Derivation/","text":"Class: Derivation A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en URI: linkml_prov:Derivation Parents is_a: EntityInfluence Children PrimarySource - A primary source for a topic refers to something produced by some agent with direct experience and knowledge about the topic, at the time of the topic's study, without benefit from hindsight. Quotation - A quotation is the repeat of (some or all of) an entity, such as text or image, by someone who may or may not be its original author. Quotation is a particular case of derivation.@en Revision - A revision is a derivation for which the resulting entity is a revised version of some original. The implication here is that the resulting entity contains substantial content from the original. Revision is a particular case of derivation.@en Referenced by class None qualifiedDerivation OPT Derivation Attributes Own hadActivity OPT range: Activity hadGeneration OPT range: Generation hadUsage OPT range: Usage Inherited from EntityInfluence: entity OPT range: Entity hadRole OPT range: Role influencer OPT range: Thing Other properties Mappings: prov:Derivation Comments: An instance of prov:Derivation provides additional descriptions about the binary prov:wasDerivedFrom relation from some derived prov:Entity to another prov:Entity from which it was derived. For example, :chewed_bubble_gum prov:wasDerivedFrom :unwrapped_bubble_gum; prov:qualifiedDerivation [ a prov:Derivation; prov:entity :unwrapped_bubble_gum; :foo :bar ].@en The more specific forms of prov:Derivation (i.e., prov:Revision, prov:Quotation, prov:PrimarySource) should be asserted if they apply.@en","title":"Class: Derivation"},{"location":"Derivation/#class-derivation","text":"A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en URI: linkml_prov:Derivation","title":"Class: Derivation"},{"location":"Derivation/#parents","text":"is_a: EntityInfluence","title":"Parents"},{"location":"Derivation/#children","text":"PrimarySource - A primary source for a topic refers to something produced by some agent with direct experience and knowledge about the topic, at the time of the topic's study, without benefit from hindsight. Quotation - A quotation is the repeat of (some or all of) an entity, such as text or image, by someone who may or may not be its original author. Quotation is a particular case of derivation.@en Revision - A revision is a derivation for which the resulting entity is a revised version of some original. The implication here is that the resulting entity contains substantial content from the original. Revision is a particular case of derivation.@en","title":"Children"},{"location":"Derivation/#referenced-by-class","text":"None qualifiedDerivation OPT Derivation","title":"Referenced by class"},{"location":"Derivation/#attributes","text":"","title":"Attributes"},{"location":"Derivation/#own","text":"hadActivity OPT range: Activity hadGeneration OPT range: Generation hadUsage OPT range: Usage","title":"Own"},{"location":"Derivation/#inherited-from-entityinfluence","text":"entity OPT range: Entity hadRole OPT range: Role influencer OPT range: Thing","title":"Inherited from EntityInfluence:"},{"location":"Derivation/#other-properties","text":"Mappings: prov:Derivation Comments: An instance of prov:Derivation provides additional descriptions about the binary prov:wasDerivedFrom relation from some derived prov:Entity to another prov:Entity from which it was derived. For example, :chewed_bubble_gum prov:wasDerivedFrom :unwrapped_bubble_gum; prov:qualifiedDerivation [ a prov:Derivation; prov:entity :unwrapped_bubble_gum; :foo :bar ].@en The more specific forms of prov:Derivation (i.e., prov:Revision, prov:Quotation, prov:PrimarySource) should be asserted if they apply.@en","title":"Other properties"},{"location":"Double/","text":"Type: Double A real number that conforms to the xsd:double specification URI: linkml:Double Root (builtin) type float","title":"Type: Double"},{"location":"Double/#type-double","text":"A real number that conforms to the xsd:double specification URI: linkml:Double Root (builtin) type float","title":"Type: Double"},{"location":"EmptyCollection/","text":"Class: EmptyCollection An empty collection is a collection without members.@en URI: linkml_prov:EmptyCollection Parents is_a: Collection - A collection is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the collections.@en Attributes Inherited from Collection: alternateOf OPT Description: Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en range: Entity atLocation OPT range: Location generatedAtTime OPT range: String hadMember OPT range: Entity hadPrimarySource OPT range: Entity invalidatedAtTime OPT range: String qualifiedAttribution OPT range: Attribution qualifiedDerivation OPT range: Derivation qualifiedGeneration OPT range: Generation qualifiedInfluence OPT range: Influence qualifiedInvalidation OPT range: Invalidation qualifiedPrimarySource OPT range: PrimarySource qualifiedQuotation OPT range: Quotation qualifiedRevision OPT range: Revision specializationOf OPT Description: An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en range: Entity value OPT Description: Provides a value that is a direct representation of an entity.@en range: String wasAttributedTo OPT Description: Attribution is the ascribing of an entity to an agent.@en range: Agent wasDerivedFrom OPT Description: A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en range: Entity wasGeneratedBy OPT range: Activity wasInfluencedBy OPT range: String wasInvalidatedBy OPT range: Activity wasQuotedFrom OPT range: Entity wasRevisionOf OPT range: Entity Other properties Mappings: prov:EmptyCollection","title":"Class: EmptyCollection"},{"location":"EmptyCollection/#class-emptycollection","text":"An empty collection is a collection without members.@en URI: linkml_prov:EmptyCollection","title":"Class: EmptyCollection"},{"location":"EmptyCollection/#parents","text":"is_a: Collection - A collection is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the collections.@en","title":"Parents"},{"location":"EmptyCollection/#attributes","text":"","title":"Attributes"},{"location":"EmptyCollection/#inherited-from-collection","text":"alternateOf OPT Description: Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en range: Entity atLocation OPT range: Location generatedAtTime OPT range: String hadMember OPT range: Entity hadPrimarySource OPT range: Entity invalidatedAtTime OPT range: String qualifiedAttribution OPT range: Attribution qualifiedDerivation OPT range: Derivation qualifiedGeneration OPT range: Generation qualifiedInfluence OPT range: Influence qualifiedInvalidation OPT range: Invalidation qualifiedPrimarySource OPT range: PrimarySource qualifiedQuotation OPT range: Quotation qualifiedRevision OPT range: Revision specializationOf OPT Description: An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en range: Entity value OPT Description: Provides a value that is a direct representation of an entity.@en range: String wasAttributedTo OPT Description: Attribution is the ascribing of an entity to an agent.@en range: Agent wasDerivedFrom OPT Description: A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en range: Entity wasGeneratedBy OPT range: Activity wasInfluencedBy OPT range: String wasInvalidatedBy OPT range: Activity wasQuotedFrom OPT range: Entity wasRevisionOf OPT range: Entity","title":"Inherited from Collection:"},{"location":"EmptyCollection/#other-properties","text":"Mappings: prov:EmptyCollection","title":"Other properties"},{"location":"End/","text":"Class: End End is when an activity is deemed to have been ended by an entity, known as trigger. The activity no longer exists after its end. Any usage, generation, or invalidation involving an activity precedes the activity's end. An end may refer to a trigger entity that terminated the activity, or to an activity, known as ender that generated the trigger.@en URI: linkml_prov:End Parents is_a: InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en Uses Mixins mixin: EntityInfluence Referenced by class None qualifiedEnd OPT End Attributes Own hadActivity OPT range: Activity Inherited from InstantaneousEvent: atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role Mixed in from EntityInfluence: entity OPT range: Entity Mixed in from Influence: influencer OPT range: Thing Other properties Mappings: prov:End Comments: An instance of prov:End provides additional descriptions about the binary prov:wasEndedBy relation from some ended prov:Activity to an prov:Entity that ended it. For example, :ball_game prov:wasEndedBy :buzzer; prov:qualifiedEnd [ a prov:End; prov:entity :buzzer; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ].@en","title":"Class: End"},{"location":"End/#class-end","text":"End is when an activity is deemed to have been ended by an entity, known as trigger. The activity no longer exists after its end. Any usage, generation, or invalidation involving an activity precedes the activity's end. An end may refer to a trigger entity that terminated the activity, or to an activity, known as ender that generated the trigger.@en URI: linkml_prov:End","title":"Class: End"},{"location":"End/#parents","text":"is_a: InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en","title":"Parents"},{"location":"End/#uses-mixins","text":"mixin: EntityInfluence","title":"Uses Mixins"},{"location":"End/#referenced-by-class","text":"None qualifiedEnd OPT End","title":"Referenced by class"},{"location":"End/#attributes","text":"","title":"Attributes"},{"location":"End/#own","text":"hadActivity OPT range: Activity","title":"Own"},{"location":"End/#inherited-from-instantaneousevent","text":"atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role","title":"Inherited from InstantaneousEvent:"},{"location":"End/#mixed-in-from-entityinfluence","text":"entity OPT range: Entity","title":"Mixed in from EntityInfluence:"},{"location":"End/#mixed-in-from-influence","text":"influencer OPT range: Thing","title":"Mixed in from Influence:"},{"location":"End/#other-properties","text":"Mappings: prov:End Comments: An instance of prov:End provides additional descriptions about the binary prov:wasEndedBy relation from some ended prov:Activity to an prov:Entity that ended it. For example, :ball_game prov:wasEndedBy :buzzer; prov:qualifiedEnd [ a prov:End; prov:entity :buzzer; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ].@en","title":"Other properties"},{"location":"EntityInfluence/","text":"Class: EntityInfluence URI: linkml_prov:EntityInfluence Parents is_a: Influence - Influence is the capacity of an entity, activity, or agent to have an effect on the character, development, or behavior of another by means of usage, start, end, generation, invalidation, communication, derivation, attribution, association, or delegation.@en Children Derivation - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en Mixin for End (mixin) - End is when an activity is deemed to have been ended by an entity, known as trigger. The activity no longer exists after its end. Any usage, generation, or invalidation involving an activity precedes the activity's end. An end may refer to a trigger entity that terminated the activity, or to an activity, known as ender that generated the trigger.@en Start (mixin) - Start is when an activity is deemed to have been started by an entity, known as trigger. The activity did not exist before its start. Any usage, generation, or invalidation involving an activity follows the activity's start. A start may refer to a trigger entity that set off the activity, or to an activity, known as starter, that generated the trigger.@en Usage (mixin) - Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not begun to utilize this entity and could not have been affected by the entity.@en Referenced by class Attributes Own entity OPT range: Entity Inherited from Influence: hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing Other properties Mappings: prov:EntityInfluence Comments: EntityInfluence provides additional descriptions of an Entity's binary influence upon any other kind of resource. Instances of EntityInfluence use the prov:entity property to cite the influencing Entity.@en It is not recommended that the type EntityInfluence be asserted without also asserting one of its more specific subclasses.@en","title":"Class: EntityInfluence"},{"location":"EntityInfluence/#class-entityinfluence","text":"URI: linkml_prov:EntityInfluence","title":"Class: EntityInfluence"},{"location":"EntityInfluence/#parents","text":"is_a: Influence - Influence is the capacity of an entity, activity, or agent to have an effect on the character, development, or behavior of another by means of usage, start, end, generation, invalidation, communication, derivation, attribution, association, or delegation.@en","title":"Parents"},{"location":"EntityInfluence/#children","text":"Derivation - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en","title":"Children"},{"location":"EntityInfluence/#mixin-for","text":"End (mixin) - End is when an activity is deemed to have been ended by an entity, known as trigger. The activity no longer exists after its end. Any usage, generation, or invalidation involving an activity precedes the activity's end. An end may refer to a trigger entity that terminated the activity, or to an activity, known as ender that generated the trigger.@en Start (mixin) - Start is when an activity is deemed to have been started by an entity, known as trigger. The activity did not exist before its start. Any usage, generation, or invalidation involving an activity follows the activity's start. A start may refer to a trigger entity that set off the activity, or to an activity, known as starter, that generated the trigger.@en Usage (mixin) - Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not begun to utilize this entity and could not have been affected by the entity.@en","title":"Mixin for"},{"location":"EntityInfluence/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"EntityInfluence/#attributes","text":"","title":"Attributes"},{"location":"EntityInfluence/#own","text":"entity OPT range: Entity","title":"Own"},{"location":"EntityInfluence/#inherited-from-influence","text":"hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing","title":"Inherited from Influence:"},{"location":"EntityInfluence/#other-properties","text":"Mappings: prov:EntityInfluence Comments: EntityInfluence provides additional descriptions of an Entity's binary influence upon any other kind of resource. Instances of EntityInfluence use the prov:entity property to cite the influencing Entity.@en It is not recommended that the type EntityInfluence be asserted without also asserting one of its more specific subclasses.@en","title":"Other properties"},{"location":"Float/","text":"Type: Float A real number that conforms to the xsd:float specification URI: linkml:Float Root (builtin) type float","title":"Type: Float"},{"location":"Float/#type-float","text":"A real number that conforms to the xsd:float specification URI: linkml:Float Root (builtin) type float","title":"Type: Float"},{"location":"Generation/","text":"Class: Generation Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.@en URI: linkml_prov:Generation Parents is_a: InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en Uses Mixins mixin: ActivityInfluence Referenced by class None hadGeneration OPT Generation None qualifiedGeneration OPT Generation Attributes Inherited from InstantaneousEvent: atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role Mixed in from ActivityInfluence: activity OPT range: Activity Mixed in from Influence: hadActivity OPT range: Activity Mixed in from Influence: influencer OPT range: Thing Other properties Mappings: prov:Generation Comments: An instance of prov:Generation provides additional descriptions about the binary prov:wasGeneratedBy relation from a generated prov:Entity to the prov:Activity that generated it. For example, :cake prov:wasGeneratedBy :baking; prov:qualifiedGeneration [ a prov:Generation; prov:activity :baking; :foo :bar ].@en","title":"Class: Generation"},{"location":"Generation/#class-generation","text":"Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.@en URI: linkml_prov:Generation","title":"Class: Generation"},{"location":"Generation/#parents","text":"is_a: InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en","title":"Parents"},{"location":"Generation/#uses-mixins","text":"mixin: ActivityInfluence","title":"Uses Mixins"},{"location":"Generation/#referenced-by-class","text":"None hadGeneration OPT Generation None qualifiedGeneration OPT Generation","title":"Referenced by class"},{"location":"Generation/#attributes","text":"","title":"Attributes"},{"location":"Generation/#inherited-from-instantaneousevent","text":"atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role","title":"Inherited from InstantaneousEvent:"},{"location":"Generation/#mixed-in-from-activityinfluence","text":"activity OPT range: Activity","title":"Mixed in from ActivityInfluence:"},{"location":"Generation/#mixed-in-from-influence","text":"hadActivity OPT range: Activity","title":"Mixed in from Influence:"},{"location":"Generation/#mixed-in-from-influence_1","text":"influencer OPT range: Thing","title":"Mixed in from Influence:"},{"location":"Generation/#other-properties","text":"Mappings: prov:Generation Comments: An instance of prov:Generation provides additional descriptions about the binary prov:wasGeneratedBy relation from a generated prov:Entity to the prov:Activity that generated it. For example, :cake prov:wasGeneratedBy :baking; prov:qualifiedGeneration [ a prov:Generation; prov:activity :baking; :foo :bar ].@en","title":"Other properties"},{"location":"Influence/","text":"Class: Influence Influence is the capacity of an entity, activity, or agent to have an effect on the character, development, or behavior of another by means of usage, start, end, generation, invalidation, communication, derivation, attribution, association, or delegation.@en URI: linkml_prov:Influence Children ActivityInfluence AgentInfluence EntityInfluence Referenced by class None qualifiedInfluence OPT Influence Attributes Own hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing Other properties Mappings: prov:Influence Comments: An instance of prov:Influence provides additional descriptions about the binary prov:wasInfluencedBy relation from some influenced Activity, Entity, or Agent to the influencing Activity, Entity, or Agent. For example, :stomach_ache prov:wasInfluencedBy :spoon; prov:qualifiedInfluence [ a prov:Influence; prov:entity :spoon; :foo :bar ] . Because prov:Influence is a broad relation, the more specific relations (Communication, Delegation, End, etc.) should be used when applicable.@en Because prov:Influence is a broad relation, its most specific subclasses (e.g. prov:Communication, prov:Delegation, prov:End, prov:Revision, etc.) should be used when applicable.@en","title":"Class: Influence"},{"location":"Influence/#class-influence","text":"Influence is the capacity of an entity, activity, or agent to have an effect on the character, development, or behavior of another by means of usage, start, end, generation, invalidation, communication, derivation, attribution, association, or delegation.@en URI: linkml_prov:Influence","title":"Class: Influence"},{"location":"Influence/#children","text":"ActivityInfluence AgentInfluence EntityInfluence","title":"Children"},{"location":"Influence/#referenced-by-class","text":"None qualifiedInfluence OPT Influence","title":"Referenced by class"},{"location":"Influence/#attributes","text":"","title":"Attributes"},{"location":"Influence/#own","text":"hadActivity OPT range: Activity hadRole OPT range: Role influencer OPT range: Thing","title":"Own"},{"location":"Influence/#other-properties","text":"Mappings: prov:Influence Comments: An instance of prov:Influence provides additional descriptions about the binary prov:wasInfluencedBy relation from some influenced Activity, Entity, or Agent to the influencing Activity, Entity, or Agent. For example, :stomach_ache prov:wasInfluencedBy :spoon; prov:qualifiedInfluence [ a prov:Influence; prov:entity :spoon; :foo :bar ] . Because prov:Influence is a broad relation, the more specific relations (Communication, Delegation, End, etc.) should be used when applicable.@en Because prov:Influence is a broad relation, its most specific subclasses (e.g. prov:Communication, prov:Delegation, prov:End, prov:Revision, etc.) should be used when applicable.@en","title":"Other properties"},{"location":"InstantaneousEvent/","text":"Class: InstantaneousEvent The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en URI: linkml_prov:InstantaneousEvent Children End - End is when an activity is deemed to have been ended by an entity, known as trigger. The activity no longer exists after its end. Any usage, generation, or invalidation involving an activity precedes the activity's end. An end may refer to a trigger entity that terminated the activity, or to an activity, known as ender that generated the trigger.@en Generation - Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.@en Invalidation - Invalidation is the start of the destruction, cessation, or expiry of an existing entity by an activity. The entity is no longer available for use (or further invalidation) after invalidation. Any generation or usage of an entity precedes its invalidation. Start - Start is when an activity is deemed to have been started by an entity, known as trigger. The activity did not exist before its start. Any usage, generation, or invalidation involving an activity follows the activity's start. A start may refer to a trigger entity that set off the activity, or to an activity, known as starter, that generated the trigger.@en Usage - Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not begun to utilize this entity and could not have been affected by the entity.@en Referenced by class Attributes Own atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role Other properties Mappings: prov:InstantaneousEvent Comments: An instantaneous event, or event for short, happens in the world and marks a change in the world, in its activities and in its entities. The term 'event' is commonly used in process algebra with a similar meaning. Events represent communications or interactions; they are assumed to be atomic and instantaneous.@en","title":"Class: InstantaneousEvent"},{"location":"InstantaneousEvent/#class-instantaneousevent","text":"The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en URI: linkml_prov:InstantaneousEvent","title":"Class: InstantaneousEvent"},{"location":"InstantaneousEvent/#children","text":"End - End is when an activity is deemed to have been ended by an entity, known as trigger. The activity no longer exists after its end. Any usage, generation, or invalidation involving an activity precedes the activity's end. An end may refer to a trigger entity that terminated the activity, or to an activity, known as ender that generated the trigger.@en Generation - Generation is the completion of production of a new entity by an activity. This entity did not exist before generation and becomes available for usage after this generation.@en Invalidation - Invalidation is the start of the destruction, cessation, or expiry of an existing entity by an activity. The entity is no longer available for use (or further invalidation) after invalidation. Any generation or usage of an entity precedes its invalidation. Start - Start is when an activity is deemed to have been started by an entity, known as trigger. The activity did not exist before its start. Any usage, generation, or invalidation involving an activity follows the activity's start. A start may refer to a trigger entity that set off the activity, or to an activity, known as starter, that generated the trigger.@en Usage - Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not begun to utilize this entity and could not have been affected by the entity.@en","title":"Children"},{"location":"InstantaneousEvent/#referenced-by-class","text":"","title":"Referenced by class"},{"location":"InstantaneousEvent/#attributes","text":"","title":"Attributes"},{"location":"InstantaneousEvent/#own","text":"atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role","title":"Own"},{"location":"InstantaneousEvent/#other-properties","text":"Mappings: prov:InstantaneousEvent Comments: An instantaneous event, or event for short, happens in the world and marks a change in the world, in its activities and in its entities. The term 'event' is commonly used in process algebra with a similar meaning. Events represent communications or interactions; they are assumed to be atomic and instantaneous.@en","title":"Other properties"},{"location":"Integer/","text":"Type: Integer An integer URI: linkml:Integer Root (builtin) type int","title":"Type: Integer"},{"location":"Integer/#type-integer","text":"An integer URI: linkml:Integer Root (builtin) type int","title":"Type: Integer"},{"location":"Invalidation/","text":"Class: Invalidation Invalidation is the start of the destruction, cessation, or expiry of an existing entity by an activity. The entity is no longer available for use (or further invalidation) after invalidation. Any generation or usage of an entity precedes its invalidation. URI: linkml_prov:Invalidation Parents is_a: InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en Uses Mixins mixin: ActivityInfluence Referenced by class None qualifiedInvalidation OPT Invalidation Attributes Inherited from InstantaneousEvent: atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role Mixed in from ActivityInfluence: activity OPT range: Activity Mixed in from Influence: hadActivity OPT range: Activity Mixed in from Influence: influencer OPT range: Thing Other properties Mappings: prov:Invalidation Comments: An instance of prov:Invalidation provides additional descriptions about the binary prov:wasInvalidatedBy relation from an invalidated prov:Entity to the prov:Activity that invalidated it. For example, :uncracked_egg prov:wasInvalidatedBy :baking; prov:qualifiedInvalidation [ a prov:Invalidation; prov:activity :baking; :foo :bar ].@en","title":"Class: Invalidation"},{"location":"Invalidation/#class-invalidation","text":"Invalidation is the start of the destruction, cessation, or expiry of an existing entity by an activity. The entity is no longer available for use (or further invalidation) after invalidation. Any generation or usage of an entity precedes its invalidation. URI: linkml_prov:Invalidation","title":"Class: Invalidation"},{"location":"Invalidation/#parents","text":"is_a: InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en","title":"Parents"},{"location":"Invalidation/#uses-mixins","text":"mixin: ActivityInfluence","title":"Uses Mixins"},{"location":"Invalidation/#referenced-by-class","text":"None qualifiedInvalidation OPT Invalidation","title":"Referenced by class"},{"location":"Invalidation/#attributes","text":"","title":"Attributes"},{"location":"Invalidation/#inherited-from-instantaneousevent","text":"atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role","title":"Inherited from InstantaneousEvent:"},{"location":"Invalidation/#mixed-in-from-activityinfluence","text":"activity OPT range: Activity","title":"Mixed in from ActivityInfluence:"},{"location":"Invalidation/#mixed-in-from-influence","text":"hadActivity OPT range: Activity","title":"Mixed in from Influence:"},{"location":"Invalidation/#mixed-in-from-influence_1","text":"influencer OPT range: Thing","title":"Mixed in from Influence:"},{"location":"Invalidation/#other-properties","text":"Mappings: prov:Invalidation Comments: An instance of prov:Invalidation provides additional descriptions about the binary prov:wasInvalidatedBy relation from an invalidated prov:Entity to the prov:Activity that invalidated it. For example, :uncracked_egg prov:wasInvalidatedBy :baking; prov:qualifiedInvalidation [ a prov:Invalidation; prov:activity :baking; :foo :bar ].@en","title":"Other properties"},{"location":"Location/","text":"Class: Location A location can be an identifiable geographic place (ISO 19112), but it can also be a non-geographic place such as a directory, row, or column. As such, there are numerous ways in which location can be expressed, such as by a coordinate, address, landmark, and so forth.@en URI: linkml_prov:Location Referenced by class None atLocation OPT Location Attributes Other properties Mappings: prov:Location","title":"Class: Location"},{"location":"Location/#class-location","text":"A location can be an identifiable geographic place (ISO 19112), but it can also be a non-geographic place such as a directory, row, or column. As such, there are numerous ways in which location can be expressed, such as by a coordinate, address, landmark, and so forth.@en URI: linkml_prov:Location","title":"Class: Location"},{"location":"Location/#referenced-by-class","text":"None atLocation OPT Location","title":"Referenced by class"},{"location":"Location/#attributes","text":"","title":"Attributes"},{"location":"Location/#other-properties","text":"Mappings: prov:Location","title":"Other properties"},{"location":"Ncname/","text":"Type: Ncname Prefix part of CURIE URI: linkml:Ncname Root (builtin) type NCName Representation str","title":"Type: Ncname"},{"location":"Ncname/#type-ncname","text":"Prefix part of CURIE URI: linkml:Ncname Root (builtin) type NCName Representation str","title":"Type: Ncname"},{"location":"Nodeidentifier/","text":"Type: Nodeidentifier A URI, CURIE or BNODE that represents a node in a model. URI: linkml:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: Nodeidentifier"},{"location":"Nodeidentifier/#type-nodeidentifier","text":"A URI, CURIE or BNODE that represents a node in a model. URI: linkml:Nodeidentifier Root (builtin) type NodeIdentifier Representation str","title":"Type: Nodeidentifier"},{"location":"Objectidentifier/","text":"Type: Objectidentifier A URI or CURIE that represents an object in the model. URI: linkml:Objectidentifier Root (builtin) type ElementIdentifier Representation str Other properties Comments: Used for inheritence and type checking","title":"Type: Objectidentifier"},{"location":"Objectidentifier/#type-objectidentifier","text":"A URI or CURIE that represents an object in the model. URI: linkml:Objectidentifier Root (builtin) type ElementIdentifier Representation str","title":"Type: Objectidentifier"},{"location":"Objectidentifier/#other-properties","text":"Comments: Used for inheritence and type checking","title":"Other properties"},{"location":"Organization/","text":"Class: Organization An organization is a social or legal institution such as a company, society, etc. URI: linkml_prov:Organization Parents is_a: Agent - An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. @en Attributes Inherited from Agent: actedOnBehalfOf OPT range: Agent atLocation OPT range: Location qualifiedDelegation OPT range: Delegation qualifiedInfluence OPT range: Influence wasInfluencedBy OPT range: String Other properties Mappings: prov:Organization","title":"Class: Organization"},{"location":"Organization/#class-organization","text":"An organization is a social or legal institution such as a company, society, etc. URI: linkml_prov:Organization","title":"Class: Organization"},{"location":"Organization/#parents","text":"is_a: Agent - An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. @en","title":"Parents"},{"location":"Organization/#attributes","text":"","title":"Attributes"},{"location":"Organization/#inherited-from-agent","text":"actedOnBehalfOf OPT range: Agent atLocation OPT range: Location qualifiedDelegation OPT range: Delegation qualifiedInfluence OPT range: Influence wasInfluencedBy OPT range: String","title":"Inherited from Agent:"},{"location":"Organization/#other-properties","text":"Mappings: prov:Organization","title":"Other properties"},{"location":"Person/","text":"Class: Person Person agents are people.@en URI: linkml_prov:Person Parents is_a: Agent - An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. @en Attributes Inherited from Agent: actedOnBehalfOf OPT range: Agent atLocation OPT range: Location qualifiedDelegation OPT range: Delegation qualifiedInfluence OPT range: Influence wasInfluencedBy OPT range: String Other properties Mappings: prov:Person","title":"Class: Person"},{"location":"Person/#class-person","text":"Person agents are people.@en URI: linkml_prov:Person","title":"Class: Person"},{"location":"Person/#parents","text":"is_a: Agent - An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. @en","title":"Parents"},{"location":"Person/#attributes","text":"","title":"Attributes"},{"location":"Person/#inherited-from-agent","text":"actedOnBehalfOf OPT range: Agent atLocation OPT range: Location qualifiedDelegation OPT range: Delegation qualifiedInfluence OPT range: Influence wasInfluencedBy OPT range: String","title":"Inherited from Agent:"},{"location":"Person/#other-properties","text":"Mappings: prov:Person","title":"Other properties"},{"location":"Plan/","text":"Class: Plan A plan is an entity that represents a set of actions or steps intended by one or more agents to achieve some goals. URI: linkml_prov:Plan Parents is_a: Entity - An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary. @en Referenced by class None hadPlan OPT Plan Attributes Inherited from Entity: alternateOf OPT Description: Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en range: Entity atLocation OPT range: Location generatedAtTime OPT range: String hadPrimarySource OPT range: Entity invalidatedAtTime OPT range: String qualifiedAttribution OPT range: Attribution qualifiedDerivation OPT range: Derivation qualifiedGeneration OPT range: Generation qualifiedInfluence OPT range: Influence qualifiedInvalidation OPT range: Invalidation qualifiedPrimarySource OPT range: PrimarySource qualifiedQuotation OPT range: Quotation qualifiedRevision OPT range: Revision specializationOf OPT Description: An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en range: Entity value OPT Description: Provides a value that is a direct representation of an entity.@en range: String wasAttributedTo OPT Description: Attribution is the ascribing of an entity to an agent.@en range: Agent wasDerivedFrom OPT Description: A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en range: Entity wasGeneratedBy OPT range: Activity wasInfluencedBy OPT range: String wasInvalidatedBy OPT range: Activity wasQuotedFrom OPT range: Entity wasRevisionOf OPT range: Entity Other properties Mappings: prov:Plan Comments: There exist no prescriptive requirement on the nature of plans, their representation, the actions or steps they consist of, or their intended goals. Since plans may evolve over time, it may become necessary to track their provenance, so plans themselves are entities. Representing the plan explicitly in the provenance can be useful for various tasks: for example, to validate the execution as represented in the provenance record, to manage expectation failures, or to provide explanations.@en","title":"Class: Plan"},{"location":"Plan/#class-plan","text":"A plan is an entity that represents a set of actions or steps intended by one or more agents to achieve some goals. URI: linkml_prov:Plan","title":"Class: Plan"},{"location":"Plan/#parents","text":"is_a: Entity - An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary. @en","title":"Parents"},{"location":"Plan/#referenced-by-class","text":"None hadPlan OPT Plan","title":"Referenced by class"},{"location":"Plan/#attributes","text":"","title":"Attributes"},{"location":"Plan/#inherited-from-entity","text":"alternateOf OPT Description: Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en range: Entity atLocation OPT range: Location generatedAtTime OPT range: String hadPrimarySource OPT range: Entity invalidatedAtTime OPT range: String qualifiedAttribution OPT range: Attribution qualifiedDerivation OPT range: Derivation qualifiedGeneration OPT range: Generation qualifiedInfluence OPT range: Influence qualifiedInvalidation OPT range: Invalidation qualifiedPrimarySource OPT range: PrimarySource qualifiedQuotation OPT range: Quotation qualifiedRevision OPT range: Revision specializationOf OPT Description: An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en range: Entity value OPT Description: Provides a value that is a direct representation of an entity.@en range: String wasAttributedTo OPT Description: Attribution is the ascribing of an entity to an agent.@en range: Agent wasDerivedFrom OPT Description: A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en range: Entity wasGeneratedBy OPT range: Activity wasInfluencedBy OPT range: String wasInvalidatedBy OPT range: Activity wasQuotedFrom OPT range: Entity wasRevisionOf OPT range: Entity","title":"Inherited from Entity:"},{"location":"Plan/#other-properties","text":"Mappings: prov:Plan Comments: There exist no prescriptive requirement on the nature of plans, their representation, the actions or steps they consist of, or their intended goals. Since plans may evolve over time, it may become necessary to track their provenance, so plans themselves are entities. Representing the plan explicitly in the provenance can be useful for various tasks: for example, to validate the execution as represented in the provenance record, to manage expectation failures, or to provide explanations.@en","title":"Other properties"},{"location":"PrimarySource/","text":"Class: PrimarySource A primary source for a topic refers to something produced by some agent with direct experience and knowledge about the topic, at the time of the topic's study, without benefit from hindsight. Because of the directness of primary sources, they 'speak for themselves' in ways that cannot be captured through the filter of secondary sources. As such, it is important for secondary sources to reference those primary sources from which they were derived, so that their reliability can be investigated. A primary source relation is a particular case of derivation of secondary materials from their primary sources. It is recognized that the determination of primary sources can be up to interpretation, and should be done according to conventions accepted within the application's domain.@en URI: linkml_prov:PrimarySource Parents is_a: Derivation - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en Referenced by class None qualifiedPrimarySource OPT PrimarySource Attributes Inherited from Derivation: entity OPT range: Entity hadActivity OPT range: Activity hadGeneration OPT range: Generation hadRole OPT range: Role hadUsage OPT range: Usage influencer OPT range: Thing Other properties Mappings: prov:PrimarySource Comments: An instance of prov:PrimarySource provides additional descriptions about the binary prov:hadPrimarySource relation from some secondary prov:Entity to an earlier, primary prov:Entity. For example, :blog prov:hadPrimarySource :newsArticle; prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :newsArticle; :foo :bar ] .@en","title":"Class: PrimarySource"},{"location":"PrimarySource/#class-primarysource","text":"A primary source for a topic refers to something produced by some agent with direct experience and knowledge about the topic, at the time of the topic's study, without benefit from hindsight. Because of the directness of primary sources, they 'speak for themselves' in ways that cannot be captured through the filter of secondary sources. As such, it is important for secondary sources to reference those primary sources from which they were derived, so that their reliability can be investigated. A primary source relation is a particular case of derivation of secondary materials from their primary sources. It is recognized that the determination of primary sources can be up to interpretation, and should be done according to conventions accepted within the application's domain.@en URI: linkml_prov:PrimarySource","title":"Class: PrimarySource"},{"location":"PrimarySource/#parents","text":"is_a: Derivation - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en","title":"Parents"},{"location":"PrimarySource/#referenced-by-class","text":"None qualifiedPrimarySource OPT PrimarySource","title":"Referenced by class"},{"location":"PrimarySource/#attributes","text":"","title":"Attributes"},{"location":"PrimarySource/#inherited-from-derivation","text":"entity OPT range: Entity hadActivity OPT range: Activity hadGeneration OPT range: Generation hadRole OPT range: Role hadUsage OPT range: Usage influencer OPT range: Thing","title":"Inherited from Derivation:"},{"location":"PrimarySource/#other-properties","text":"Mappings: prov:PrimarySource Comments: An instance of prov:PrimarySource provides additional descriptions about the binary prov:hadPrimarySource relation from some secondary prov:Entity to an earlier, primary prov:Entity. For example, :blog prov:hadPrimarySource :newsArticle; prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :newsArticle; :foo :bar ] .@en","title":"Other properties"},{"location":"Quotation/","text":"Class: Quotation A quotation is the repeat of (some or all of) an entity, such as text or image, by someone who may or may not be its original author. Quotation is a particular case of derivation.@en URI: linkml_prov:Quotation Parents is_a: Derivation - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en Referenced by class None qualifiedQuotation OPT Quotation Attributes Inherited from Derivation: entity OPT range: Entity hadActivity OPT range: Activity hadGeneration OPT range: Generation hadRole OPT range: Role hadUsage OPT range: Usage influencer OPT range: Thing Other properties Mappings: prov:Quotation Comments: An instance of prov:Quotation provides additional descriptions about the binary prov:wasQuotedFrom relation from some taken prov:Entity from an earlier, larger prov:Entity. For example, :here_is_looking_at_you_kid prov:wasQuotedFrom :casablanca_script; prov:qualifiedQuotation [ a prov:Quotation; prov:entity :casablanca_script; :foo :bar ].@en","title":"Class: Quotation"},{"location":"Quotation/#class-quotation","text":"A quotation is the repeat of (some or all of) an entity, such as text or image, by someone who may or may not be its original author. Quotation is a particular case of derivation.@en URI: linkml_prov:Quotation","title":"Class: Quotation"},{"location":"Quotation/#parents","text":"is_a: Derivation - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en","title":"Parents"},{"location":"Quotation/#referenced-by-class","text":"None qualifiedQuotation OPT Quotation","title":"Referenced by class"},{"location":"Quotation/#attributes","text":"","title":"Attributes"},{"location":"Quotation/#inherited-from-derivation","text":"entity OPT range: Entity hadActivity OPT range: Activity hadGeneration OPT range: Generation hadRole OPT range: Role hadUsage OPT range: Usage influencer OPT range: Thing","title":"Inherited from Derivation:"},{"location":"Quotation/#other-properties","text":"Mappings: prov:Quotation Comments: An instance of prov:Quotation provides additional descriptions about the binary prov:wasQuotedFrom relation from some taken prov:Entity from an earlier, larger prov:Entity. For example, :here_is_looking_at_you_kid prov:wasQuotedFrom :casablanca_script; prov:qualifiedQuotation [ a prov:Quotation; prov:entity :casablanca_script; :foo :bar ].@en","title":"Other properties"},{"location":"Revision/","text":"Class: Revision A revision is a derivation for which the resulting entity is a revised version of some original. The implication here is that the resulting entity contains substantial content from the original. Revision is a particular case of derivation.@en URI: linkml_prov:Revision Parents is_a: Derivation - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en Referenced by class None qualifiedRevision OPT Revision Attributes Inherited from Derivation: entity OPT range: Entity hadActivity OPT range: Activity hadGeneration OPT range: Generation hadRole OPT range: Role hadUsage OPT range: Usage influencer OPT range: Thing Other properties Mappings: prov:Revision Comments: An instance of prov:Revision provides additional descriptions about the binary prov:wasRevisionOf relation from some newer prov:Entity to an earlier prov:Entity. For example, :draft_2 prov:wasRevisionOf :draft_1; prov:qualifiedRevision [ a prov:Revision; prov:entity :draft_1; :foo :bar ].@en","title":"Class: Revision"},{"location":"Revision/#class-revision","text":"A revision is a derivation for which the resulting entity is a revised version of some original. The implication here is that the resulting entity contains substantial content from the original. Revision is a particular case of derivation.@en URI: linkml_prov:Revision","title":"Class: Revision"},{"location":"Revision/#parents","text":"is_a: Derivation - A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en","title":"Parents"},{"location":"Revision/#referenced-by-class","text":"None qualifiedRevision OPT Revision","title":"Referenced by class"},{"location":"Revision/#attributes","text":"","title":"Attributes"},{"location":"Revision/#inherited-from-derivation","text":"entity OPT range: Entity hadActivity OPT range: Activity hadGeneration OPT range: Generation hadRole OPT range: Role hadUsage OPT range: Usage influencer OPT range: Thing","title":"Inherited from Derivation:"},{"location":"Revision/#other-properties","text":"Mappings: prov:Revision Comments: An instance of prov:Revision provides additional descriptions about the binary prov:wasRevisionOf relation from some newer prov:Entity to an earlier prov:Entity. For example, :draft_2 prov:wasRevisionOf :draft_1; prov:qualifiedRevision [ a prov:Revision; prov:entity :draft_1; :foo :bar ].@en","title":"Other properties"},{"location":"Role/","text":"Class: Role A role is the function of an entity or agent with respect to an activity, in the context of a usage, generation, invalidation, association, start, and end.@en URI: linkml_prov:Role Referenced by class None hadRole OPT Role Attributes Other properties Mappings: prov:Role","title":"Class: Role"},{"location":"Role/#class-role","text":"A role is the function of an entity or agent with respect to an activity, in the context of a usage, generation, invalidation, association, start, and end.@en URI: linkml_prov:Role","title":"Class: Role"},{"location":"Role/#referenced-by-class","text":"None hadRole OPT Role","title":"Referenced by class"},{"location":"Role/#attributes","text":"","title":"Attributes"},{"location":"Role/#other-properties","text":"Mappings: prov:Role","title":"Other properties"},{"location":"SoftwareAgent/","text":"Class: SoftwareAgent A software agent is running software.@en URI: linkml_prov:SoftwareAgent Parents is_a: Agent - An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. @en Attributes Inherited from Agent: actedOnBehalfOf OPT range: Agent atLocation OPT range: Location qualifiedDelegation OPT range: Delegation qualifiedInfluence OPT range: Influence wasInfluencedBy OPT range: String Other properties Mappings: prov:SoftwareAgent","title":"Class: SoftwareAgent"},{"location":"SoftwareAgent/#class-softwareagent","text":"A software agent is running software.@en URI: linkml_prov:SoftwareAgent","title":"Class: SoftwareAgent"},{"location":"SoftwareAgent/#parents","text":"is_a: Agent - An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. @en","title":"Parents"},{"location":"SoftwareAgent/#attributes","text":"","title":"Attributes"},{"location":"SoftwareAgent/#inherited-from-agent","text":"actedOnBehalfOf OPT range: Agent atLocation OPT range: Location qualifiedDelegation OPT range: Delegation qualifiedInfluence OPT range: Influence wasInfluencedBy OPT range: String","title":"Inherited from Agent:"},{"location":"SoftwareAgent/#other-properties","text":"Mappings: prov:SoftwareAgent","title":"Other properties"},{"location":"Start/","text":"Class: Start Start is when an activity is deemed to have been started by an entity, known as trigger. The activity did not exist before its start. Any usage, generation, or invalidation involving an activity follows the activity's start. A start may refer to a trigger entity that set off the activity, or to an activity, known as starter, that generated the trigger.@en URI: linkml_prov:Start Parents is_a: InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en Uses Mixins mixin: EntityInfluence Referenced by class None qualifiedStart OPT Start Attributes Own hadActivity OPT range: Activity Inherited from InstantaneousEvent: atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role Mixed in from EntityInfluence: entity OPT range: Entity Mixed in from Influence: influencer OPT range: Thing Other properties Mappings: prov:Start Comments: An instance of prov:Start provides additional descriptions about the binary prov:wasStartedBy relation from some started prov:Activity to an prov:Entity that started it. For example, :foot_race prov:wasStartedBy :bang; prov:qualifiedStart [ a prov:Start; prov:entity :bang; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ] .@en","title":"Class: Start"},{"location":"Start/#class-start","text":"Start is when an activity is deemed to have been started by an entity, known as trigger. The activity did not exist before its start. Any usage, generation, or invalidation involving an activity follows the activity's start. A start may refer to a trigger entity that set off the activity, or to an activity, known as starter, that generated the trigger.@en URI: linkml_prov:Start","title":"Class: Start"},{"location":"Start/#parents","text":"is_a: InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en","title":"Parents"},{"location":"Start/#uses-mixins","text":"mixin: EntityInfluence","title":"Uses Mixins"},{"location":"Start/#referenced-by-class","text":"None qualifiedStart OPT Start","title":"Referenced by class"},{"location":"Start/#attributes","text":"","title":"Attributes"},{"location":"Start/#own","text":"hadActivity OPT range: Activity","title":"Own"},{"location":"Start/#inherited-from-instantaneousevent","text":"atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role","title":"Inherited from InstantaneousEvent:"},{"location":"Start/#mixed-in-from-entityinfluence","text":"entity OPT range: Entity","title":"Mixed in from EntityInfluence:"},{"location":"Start/#mixed-in-from-influence","text":"influencer OPT range: Thing","title":"Mixed in from Influence:"},{"location":"Start/#other-properties","text":"Mappings: prov:Start Comments: An instance of prov:Start provides additional descriptions about the binary prov:wasStartedBy relation from some started prov:Activity to an prov:Entity that started it. For example, :foot_race prov:wasStartedBy :bang; prov:qualifiedStart [ a prov:Start; prov:entity :bang; :foo :bar; prov:atTime '2012-03-09T08:05:08-05:00'^^xsd:dateTime ] .@en","title":"Other properties"},{"location":"String/","text":"Type: String A character string URI: linkml:String Root (builtin) type str","title":"Type: String"},{"location":"String/#type-string","text":"A character string URI: linkml:String Root (builtin) type str","title":"Type: String"},{"location":"Thing/","text":"Class: Thing URI: linkml_prov:Thing Referenced by class None influencer OPT Thing Attributes Other properties Mappings: owl:Thing","title":"Class: Thing"},{"location":"Thing/#class-thing","text":"URI: linkml_prov:Thing","title":"Class: Thing"},{"location":"Thing/#referenced-by-class","text":"None influencer OPT Thing","title":"Referenced by class"},{"location":"Thing/#attributes","text":"","title":"Attributes"},{"location":"Thing/#other-properties","text":"Mappings: owl:Thing","title":"Other properties"},{"location":"Time/","text":"Type: Time A time object represents a (local) time of day, independent of any particular day URI: linkml:Time Root (builtin) type XSDTime Representation str","title":"Type: Time"},{"location":"Time/#type-time","text":"A time object represents a (local) time of day, independent of any particular day URI: linkml:Time Root (builtin) type XSDTime Representation str","title":"Type: Time"},{"location":"Uri/","text":"Type: Uri a complete URI URI: linkml:Uri Root (builtin) type URI Representation str","title":"Type: Uri"},{"location":"Uri/#type-uri","text":"a complete URI URI: linkml:Uri Root (builtin) type URI Representation str","title":"Type: Uri"},{"location":"Uriorcurie/","text":"Type: Uriorcurie a URI or a CURIE URI: linkml:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: Uriorcurie"},{"location":"Uriorcurie/#type-uriorcurie","text":"a URI or a CURIE URI: linkml:Uriorcurie Root (builtin) type URIorCURIE Representation str","title":"Type: Uriorcurie"},{"location":"Usage/","text":"Class: Usage Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not begun to utilize this entity and could not have been affected by the entity.@en URI: linkml_prov:Usage Parents is_a: InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en Uses Mixins mixin: EntityInfluence Referenced by class None hadUsage OPT Usage None qualifiedUsage OPT Usage Attributes Inherited from InstantaneousEvent: atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role Mixed in from EntityInfluence: entity OPT range: Entity Mixed in from Influence: hadActivity OPT range: Activity Mixed in from Influence: influencer OPT range: Thing Other properties Mappings: prov:Usage Comments: An instance of prov:Usage provides additional descriptions about the binary prov:used relation from some prov:Activity to an prov:Entity that it used. For example, :keynote prov:used :podium; prov:qualifiedUsage [ a prov:Usage; prov:entity :podium; :foo :bar ].@en","title":"Class: Usage"},{"location":"Usage/#class-usage","text":"Usage is the beginning of utilizing an entity by an activity. Before usage, the activity had not begun to utilize this entity and could not have been affected by the entity.@en URI: linkml_prov:Usage","title":"Class: Usage"},{"location":"Usage/#parents","text":"is_a: InstantaneousEvent - The PROV data model is implicitly based on a notion of instantaneous events (or just events), that mark transitions in the world. Events include generation, usage, or invalidation of entities, as well as starting or ending of activities. This notion of event is not first-class in the data model, but it is useful for explaining its other concepts and its semantics.@en","title":"Parents"},{"location":"Usage/#uses-mixins","text":"mixin: EntityInfluence","title":"Uses Mixins"},{"location":"Usage/#referenced-by-class","text":"None hadUsage OPT Usage None qualifiedUsage OPT Usage","title":"Referenced by class"},{"location":"Usage/#attributes","text":"","title":"Attributes"},{"location":"Usage/#inherited-from-instantaneousevent","text":"atLocation OPT range: Location atTime OPT range: String hadRole OPT range: Role","title":"Inherited from InstantaneousEvent:"},{"location":"Usage/#mixed-in-from-entityinfluence","text":"entity OPT range: Entity","title":"Mixed in from EntityInfluence:"},{"location":"Usage/#mixed-in-from-influence","text":"hadActivity OPT range: Activity","title":"Mixed in from Influence:"},{"location":"Usage/#mixed-in-from-influence_1","text":"influencer OPT range: Thing","title":"Mixed in from Influence:"},{"location":"Usage/#other-properties","text":"Mappings: prov:Usage Comments: An instance of prov:Usage provides additional descriptions about the binary prov:used relation from some prov:Activity to an prov:Entity that it used. For example, :keynote prov:used :podium; prov:qualifiedUsage [ a prov:Usage; prov:entity :podium; :foo :bar ].@en","title":"Other properties"},{"location":"actedOnBehalfOf/","text":"Slot: actedOnBehalfOf URI: linkml_prov:actedOnBehalfOf Domain and Range None -> OPT Agent Parents is_a: wasInfluencedBy Children Used by Agent Organization Person SoftwareAgent Other properties Mappings: prov:actedOnBehalfOf Comments: An object property to express the accountability of an agent towards another agent. The subordinate agent acted on behalf of the responsible agent in an actual activity. @en","title":"Slot: actedOnBehalfOf"},{"location":"actedOnBehalfOf/#slot-actedonbehalfof","text":"URI: linkml_prov:actedOnBehalfOf","title":"Slot: actedOnBehalfOf"},{"location":"actedOnBehalfOf/#domain-and-range","text":"None -> OPT Agent","title":"Domain and Range"},{"location":"actedOnBehalfOf/#parents","text":"is_a: wasInfluencedBy","title":"Parents"},{"location":"actedOnBehalfOf/#children","text":"","title":"Children"},{"location":"actedOnBehalfOf/#used-by","text":"Agent Organization Person SoftwareAgent","title":"Used by"},{"location":"actedOnBehalfOf/#other-properties","text":"Mappings: prov:actedOnBehalfOf Comments: An object property to express the accountability of an agent towards another agent. The subordinate agent acted on behalf of the responsible agent in an actual activity. @en","title":"Other properties"},{"location":"activity/","text":"Class: Activity An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities. URI: linkml_prov:Activity Referenced by class None activity OPT Activity None hadActivity OPT Activity None wasGeneratedBy OPT Activity None wasInformedBy OPT Activity None wasInvalidatedBy OPT Activity Attributes Own atLocation OPT range: Location endedAtTime OPT range: String generated OPT range: Entity invalidated OPT range: Entity qualifiedAssociation OPT range: Association qualifiedCommunication OPT range: Communication qualifiedEnd OPT range: End qualifiedInfluence OPT range: Influence qualifiedStart OPT range: Start qualifiedUsage OPT range: Usage startedAtTime OPT range: String used OPT range: Entity wasAssociatedWith OPT range: Agent wasEndedBy OPT range: Entity wasInfluencedBy OPT range: String wasInformedBy OPT range: Activity wasStartedBy OPT range: Entity Other properties Mappings: prov:Activity","title":"Class: Activity"},{"location":"activity/#class-activity","text":"An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities. URI: linkml_prov:Activity","title":"Class: Activity"},{"location":"activity/#referenced-by-class","text":"None activity OPT Activity None hadActivity OPT Activity None wasGeneratedBy OPT Activity None wasInformedBy OPT Activity None wasInvalidatedBy OPT Activity","title":"Referenced by class"},{"location":"activity/#attributes","text":"","title":"Attributes"},{"location":"activity/#own","text":"atLocation OPT range: Location endedAtTime OPT range: String generated OPT range: Entity invalidated OPT range: Entity qualifiedAssociation OPT range: Association qualifiedCommunication OPT range: Communication qualifiedEnd OPT range: End qualifiedInfluence OPT range: Influence qualifiedStart OPT range: Start qualifiedUsage OPT range: Usage startedAtTime OPT range: String used OPT range: Entity wasAssociatedWith OPT range: Agent wasEndedBy OPT range: Entity wasInfluencedBy OPT range: String wasInformedBy OPT range: Activity wasStartedBy OPT range: Entity","title":"Own"},{"location":"activity/#other-properties","text":"Mappings: prov:Activity","title":"Other properties"},{"location":"agent/","text":"Class: Agent An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. @en URI: linkml_prov:Agent Children Organization - An organization is a social or legal institution such as a company, society, etc. Person - Person agents are people.@en SoftwareAgent - A software agent is running software.@en Referenced by class None actedOnBehalfOf OPT Agent None agent OPT Agent None wasAssociatedWith OPT Agent None wasAttributedTo OPT Agent Attributes Own actedOnBehalfOf OPT range: Agent atLocation OPT range: Location qualifiedDelegation OPT range: Delegation qualifiedInfluence OPT range: Influence wasInfluencedBy OPT range: String Other properties Mappings: prov:Agent","title":"Class: Agent"},{"location":"agent/#class-agent","text":"An agent is something that bears some form of responsibility for an activity taking place, for the existence of an entity, or for another agent's activity. @en URI: linkml_prov:Agent","title":"Class: Agent"},{"location":"agent/#children","text":"Organization - An organization is a social or legal institution such as a company, society, etc. Person - Person agents are people.@en SoftwareAgent - A software agent is running software.@en","title":"Children"},{"location":"agent/#referenced-by-class","text":"None actedOnBehalfOf OPT Agent None agent OPT Agent None wasAssociatedWith OPT Agent None wasAttributedTo OPT Agent","title":"Referenced by class"},{"location":"agent/#attributes","text":"","title":"Attributes"},{"location":"agent/#own","text":"actedOnBehalfOf OPT range: Agent atLocation OPT range: Location qualifiedDelegation OPT range: Delegation qualifiedInfluence OPT range: Influence wasInfluencedBy OPT range: String","title":"Own"},{"location":"agent/#other-properties","text":"Mappings: prov:Agent","title":"Other properties"},{"location":"alternateOf/","text":"Slot: alternateOf Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en URI: linkml_prov:alternateOf Domain and Range None -> OPT Entity Parents Children specializationOf Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:alternateOf","title":"Slot: alternateOf"},{"location":"alternateOf/#slot-alternateof","text":"Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en URI: linkml_prov:alternateOf","title":"Slot: alternateOf"},{"location":"alternateOf/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"alternateOf/#parents","text":"","title":"Parents"},{"location":"alternateOf/#children","text":"specializationOf","title":"Children"},{"location":"alternateOf/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"alternateOf/#other-properties","text":"Mappings: prov:alternateOf","title":"Other properties"},{"location":"aq/","text":"Slot: aq URI: linkml_prov:aq Domain and Range None -> OPT String Parents is_a: seeAlso Children Used by Other properties Mappings: prov:aq","title":"Slot: aq"},{"location":"aq/#slot-aq","text":"URI: linkml_prov:aq","title":"Slot: aq"},{"location":"aq/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"aq/#parents","text":"is_a: seeAlso","title":"Parents"},{"location":"aq/#children","text":"","title":"Children"},{"location":"aq/#used-by","text":"","title":"Used by"},{"location":"aq/#other-properties","text":"Mappings: prov:aq","title":"Other properties"},{"location":"atLocation/","text":"Slot: atLocation URI: linkml_prov:atLocation Domain and Range None -> OPT Location Parents Children Used by Activity Agent Bundle Collection EmptyCollection End Entity Generation InstantaneousEvent Invalidation Organization Person Plan SoftwareAgent Start Usage Other properties Mappings: prov:atLocation Comments: The Location of any resource.@en This property has multiple RDFS domains to suit multiple OWL Profiles. See PROV-O OWL Profile .","title":"Slot: atLocation"},{"location":"atLocation/#slot-atlocation","text":"URI: linkml_prov:atLocation","title":"Slot: atLocation"},{"location":"atLocation/#domain-and-range","text":"None -> OPT Location","title":"Domain and Range"},{"location":"atLocation/#parents","text":"","title":"Parents"},{"location":"atLocation/#children","text":"","title":"Children"},{"location":"atLocation/#used-by","text":"Activity Agent Bundle Collection EmptyCollection End Entity Generation InstantaneousEvent Invalidation Organization Person Plan SoftwareAgent Start Usage","title":"Used by"},{"location":"atLocation/#other-properties","text":"Mappings: prov:atLocation Comments: The Location of any resource.@en This property has multiple RDFS domains to suit multiple OWL Profiles. See PROV-O OWL Profile .","title":"Other properties"},{"location":"atTime/","text":"Slot: atTime URI: linkml_prov:atTime Domain and Range None -> OPT String Parents Children Used by End Generation InstantaneousEvent Invalidation Start Usage Other properties Mappings: prov:atTime Comments: The time at which an InstantaneousEvent occurred, in the form of xsd:dateTime.@en","title":"Slot: atTime"},{"location":"atTime/#slot-attime","text":"URI: linkml_prov:atTime","title":"Slot: atTime"},{"location":"atTime/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"atTime/#parents","text":"","title":"Parents"},{"location":"atTime/#children","text":"","title":"Children"},{"location":"atTime/#used-by","text":"End Generation InstantaneousEvent Invalidation Start Usage","title":"Used by"},{"location":"atTime/#other-properties","text":"Mappings: prov:atTime Comments: The time at which an InstantaneousEvent occurred, in the form of xsd:dateTime.@en","title":"Other properties"},{"location":"category/","text":"Slot: category URI: linkml_prov:category Domain and Range None -> OPT String Parents Children Used by Other properties Mappings: prov:category Comments: Classify prov-o terms into three categories, including 'starting-point', 'qualifed', and 'extended'. This classification is used by the prov-o html document to gently introduce prov-o terms to its users. @en","title":"Slot: category"},{"location":"category/#slot-category","text":"URI: linkml_prov:category","title":"Slot: category"},{"location":"category/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"category/#parents","text":"","title":"Parents"},{"location":"category/#children","text":"","title":"Children"},{"location":"category/#used-by","text":"","title":"Used by"},{"location":"category/#other-properties","text":"Mappings: prov:category Comments: Classify prov-o terms into three categories, including 'starting-point', 'qualifed', and 'extended'. This classification is used by the prov-o html document to gently introduce prov-o terms to its users. @en","title":"Other properties"},{"location":"comment/","text":"Slot: comment URI: linkml_prov:comment Domain and Range None -> OPT String Parents Children Used by Other properties Mappings: rdfs:comment Comments: @en","title":"Slot: comment"},{"location":"comment/#slot-comment","text":"URI: linkml_prov:comment","title":"Slot: comment"},{"location":"comment/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"comment/#parents","text":"","title":"Parents"},{"location":"comment/#children","text":"","title":"Children"},{"location":"comment/#used-by","text":"","title":"Used by"},{"location":"comment/#other-properties","text":"Mappings: rdfs:comment Comments: @en","title":"Other properties"},{"location":"component/","text":"Slot: component URI: linkml_prov:component Domain and Range None -> OPT String Parents Children Used by Other properties Mappings: prov:component Comments: Classify prov-o terms into six components according to prov-dm, including 'agents-responsibility', 'alternate', 'annotations', 'collections', 'derivations', and 'entities-activities'. This classification is used so that readers of prov-o specification can find its correspondence with the prov-dm specification.@en","title":"Slot: component"},{"location":"component/#slot-component","text":"URI: linkml_prov:component","title":"Slot: component"},{"location":"component/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"component/#parents","text":"","title":"Parents"},{"location":"component/#children","text":"","title":"Children"},{"location":"component/#used-by","text":"","title":"Used by"},{"location":"component/#other-properties","text":"Mappings: prov:component Comments: Classify prov-o terms into six components according to prov-dm, including 'agents-responsibility', 'alternate', 'annotations', 'collections', 'derivations', and 'entities-activities'. This classification is used so that readers of prov-o specification can find its correspondence with the prov-dm specification.@en","title":"Other properties"},{"location":"constraints/","text":"Slot: constraints URI: linkml_prov:constraints Domain and Range None -> OPT String Parents is_a: seeAlso Children Used by Other properties Mappings: prov:constraints Comments: A reference to the principal section of the PROV-CONSTRAINTS document that describes this concept.@en","title":"Slot: constraints"},{"location":"constraints/#slot-constraints","text":"URI: linkml_prov:constraints","title":"Slot: constraints"},{"location":"constraints/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"constraints/#parents","text":"is_a: seeAlso","title":"Parents"},{"location":"constraints/#children","text":"","title":"Children"},{"location":"constraints/#used-by","text":"","title":"Used by"},{"location":"constraints/#other-properties","text":"Mappings: prov:constraints Comments: A reference to the principal section of the PROV-CONSTRAINTS document that describes this concept.@en","title":"Other properties"},{"location":"credits/","text":"Credits this project was made using the Link Model Language (LinkML) framework","title":"Credits"},{"location":"credits/#credits","text":"this project was made using the Link Model Language (LinkML) framework","title":"Credits"},{"location":"definition/","text":"Slot: definition URI: linkml_prov:definition Domain and Range None -> OPT String Parents Children editorsDefinition Used by Other properties Mappings: prov:definition Comments: A definition quoted from PROV-DM or PROV-CONSTRAINTS that describes the concept expressed with this OWL term.@en","title":"Slot: definition"},{"location":"definition/#slot-definition","text":"URI: linkml_prov:definition","title":"Slot: definition"},{"location":"definition/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"definition/#parents","text":"","title":"Parents"},{"location":"definition/#children","text":"editorsDefinition","title":"Children"},{"location":"definition/#used-by","text":"","title":"Used by"},{"location":"definition/#other-properties","text":"Mappings: prov:definition Comments: A definition quoted from PROV-DM or PROV-CONSTRAINTS that describes the concept expressed with this OWL term.@en","title":"Other properties"},{"location":"dm/","text":"Slot: dm URI: linkml_prov:dm Domain and Range None -> OPT String Parents is_a: seeAlso Children Used by Other properties Mappings: prov:dm Comments: A reference to the principal section of the PROV-DM document that describes this concept.@en","title":"Slot: dm"},{"location":"dm/#slot-dm","text":"URI: linkml_prov:dm","title":"Slot: dm"},{"location":"dm/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"dm/#parents","text":"is_a: seeAlso","title":"Parents"},{"location":"dm/#children","text":"","title":"Children"},{"location":"dm/#used-by","text":"","title":"Used by"},{"location":"dm/#other-properties","text":"Mappings: prov:dm Comments: A reference to the principal section of the PROV-DM document that describes this concept.@en","title":"Other properties"},{"location":"editorialNote/","text":"Slot: editorialNote URI: linkml_prov:editorialNote Domain and Range None -> OPT String Parents Children Used by Other properties Mappings: prov:editorialNote Comments: A note by the OWL development team about how this term expresses the PROV-DM concept, or how it should be used in context of semantic web or linked data.@en","title":"Slot: editorialNote"},{"location":"editorialNote/#slot-editorialnote","text":"URI: linkml_prov:editorialNote","title":"Slot: editorialNote"},{"location":"editorialNote/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"editorialNote/#parents","text":"","title":"Parents"},{"location":"editorialNote/#children","text":"","title":"Children"},{"location":"editorialNote/#used-by","text":"","title":"Used by"},{"location":"editorialNote/#other-properties","text":"Mappings: prov:editorialNote Comments: A note by the OWL development team about how this term expresses the PROV-DM concept, or how it should be used in context of semantic web or linked data.@en","title":"Other properties"},{"location":"editorsDefinition/","text":"Slot: editorsDefinition URI: linkml_prov:editorsDefinition Domain and Range None -> OPT String Parents is_a: definition Children Used by Other properties Mappings: prov:editorsDefinition Comments: When the prov-o term does not have a definition drawn from prov-dm, and the prov-o editor provides one.@en","title":"Slot: editorsDefinition"},{"location":"editorsDefinition/#slot-editorsdefinition","text":"URI: linkml_prov:editorsDefinition","title":"Slot: editorsDefinition"},{"location":"editorsDefinition/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"editorsDefinition/#parents","text":"is_a: definition","title":"Parents"},{"location":"editorsDefinition/#children","text":"","title":"Children"},{"location":"editorsDefinition/#used-by","text":"","title":"Used by"},{"location":"editorsDefinition/#other-properties","text":"Mappings: prov:editorsDefinition Comments: When the prov-o term does not have a definition drawn from prov-dm, and the prov-o editor provides one.@en","title":"Other properties"},{"location":"endedAtTime/","text":"Slot: endedAtTime URI: linkml_prov:endedAtTime Domain and Range None -> OPT String Parents Children Used by Activity Other properties Mappings: prov:endedAtTime Comments: The time at which an activity ended. See also prov:startedAtTime.@en","title":"Slot: endedAtTime"},{"location":"endedAtTime/#slot-endedattime","text":"URI: linkml_prov:endedAtTime","title":"Slot: endedAtTime"},{"location":"endedAtTime/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"endedAtTime/#parents","text":"","title":"Parents"},{"location":"endedAtTime/#children","text":"","title":"Children"},{"location":"endedAtTime/#used-by","text":"Activity","title":"Used by"},{"location":"endedAtTime/#other-properties","text":"Mappings: prov:endedAtTime Comments: The time at which an activity ended. See also prov:startedAtTime.@en","title":"Other properties"},{"location":"entity/","text":"Class: Entity An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary. @en URI: linkml_prov:Entity Children Bundle - A bundle is a named set of provenance descriptions, and is itself an Entity, so allowing provenance of provenance to be expressed.@en Collection - A collection is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the collections.@en Plan - A plan is an entity that represents a set of actions or steps intended by one or more agents to achieve some goals. Referenced by class None alternateOf OPT Entity None entity OPT Entity None generated OPT Entity None hadMember OPT Entity None hadPrimarySource OPT Entity None invalidated OPT Entity None specializationOf OPT Entity None used OPT Entity None wasDerivedFrom OPT Entity None wasEndedBy OPT Entity None wasQuotedFrom OPT Entity None wasRevisionOf OPT Entity None wasStartedBy OPT Entity Attributes Own alternateOf OPT Description: Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en range: Entity atLocation OPT range: Location generatedAtTime OPT range: String hadPrimarySource OPT range: Entity invalidatedAtTime OPT range: String qualifiedAttribution OPT range: Attribution qualifiedDerivation OPT range: Derivation qualifiedGeneration OPT range: Generation qualifiedInfluence OPT range: Influence qualifiedInvalidation OPT range: Invalidation qualifiedPrimarySource OPT range: PrimarySource qualifiedQuotation OPT range: Quotation qualifiedRevision OPT range: Revision specializationOf OPT Description: An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en range: Entity value OPT Description: Provides a value that is a direct representation of an entity.@en range: String wasAttributedTo OPT Description: Attribution is the ascribing of an entity to an agent.@en range: Agent wasDerivedFrom OPT Description: A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en range: Entity wasGeneratedBy OPT range: Activity wasInfluencedBy OPT range: String wasInvalidatedBy OPT range: Activity wasQuotedFrom OPT range: Entity wasRevisionOf OPT range: Entity Other properties Mappings: prov:Entity","title":"Class: Entity"},{"location":"entity/#class-entity","text":"An entity is a physical, digital, conceptual, or other kind of thing with some fixed aspects; entities may be real or imaginary. @en URI: linkml_prov:Entity","title":"Class: Entity"},{"location":"entity/#children","text":"Bundle - A bundle is a named set of provenance descriptions, and is itself an Entity, so allowing provenance of provenance to be expressed.@en Collection - A collection is an entity that provides a structure to some constituents, which are themselves entities. These constituents are said to be member of the collections.@en Plan - A plan is an entity that represents a set of actions or steps intended by one or more agents to achieve some goals.","title":"Children"},{"location":"entity/#referenced-by-class","text":"None alternateOf OPT Entity None entity OPT Entity None generated OPT Entity None hadMember OPT Entity None hadPrimarySource OPT Entity None invalidated OPT Entity None specializationOf OPT Entity None used OPT Entity None wasDerivedFrom OPT Entity None wasEndedBy OPT Entity None wasQuotedFrom OPT Entity None wasRevisionOf OPT Entity None wasStartedBy OPT Entity","title":"Referenced by class"},{"location":"entity/#attributes","text":"","title":"Attributes"},{"location":"entity/#own","text":"alternateOf OPT Description: Two alternate entities present aspects of the same thing. These aspects may be the same or different, and the alternate entities may or may not overlap in time.@en range: Entity atLocation OPT range: Location generatedAtTime OPT range: String hadPrimarySource OPT range: Entity invalidatedAtTime OPT range: String qualifiedAttribution OPT range: Attribution qualifiedDerivation OPT range: Derivation qualifiedGeneration OPT range: Generation qualifiedInfluence OPT range: Influence qualifiedInvalidation OPT range: Invalidation qualifiedPrimarySource OPT range: PrimarySource qualifiedQuotation OPT range: Quotation qualifiedRevision OPT range: Revision specializationOf OPT Description: An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en range: Entity value OPT Description: Provides a value that is a direct representation of an entity.@en range: String wasAttributedTo OPT Description: Attribution is the ascribing of an entity to an agent.@en range: Agent wasDerivedFrom OPT Description: A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en range: Entity wasGeneratedBy OPT range: Activity wasInfluencedBy OPT range: String wasInvalidatedBy OPT range: Activity wasQuotedFrom OPT range: Entity wasRevisionOf OPT range: Entity","title":"Own"},{"location":"entity/#other-properties","text":"Mappings: prov:Entity","title":"Other properties"},{"location":"generated/","text":"Slot: generated URI: linkml_prov:generated Domain and Range None -> OPT Entity Parents is_a: influenced Children Used by Activity Other properties Mappings: prov:generated","title":"Slot: generated"},{"location":"generated/#slot-generated","text":"URI: linkml_prov:generated","title":"Slot: generated"},{"location":"generated/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"generated/#parents","text":"is_a: influenced","title":"Parents"},{"location":"generated/#children","text":"","title":"Children"},{"location":"generated/#used-by","text":"Activity","title":"Used by"},{"location":"generated/#other-properties","text":"Mappings: prov:generated","title":"Other properties"},{"location":"generatedAtTime/","text":"Slot: generatedAtTime URI: linkml_prov:generatedAtTime Domain and Range None -> OPT String Parents Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:generatedAtTime Comments: The time at which an entity was completely created and is available for use.@en","title":"Slot: generatedAtTime"},{"location":"generatedAtTime/#slot-generatedattime","text":"URI: linkml_prov:generatedAtTime","title":"Slot: generatedAtTime"},{"location":"generatedAtTime/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"generatedAtTime/#parents","text":"","title":"Parents"},{"location":"generatedAtTime/#children","text":"","title":"Children"},{"location":"generatedAtTime/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"generatedAtTime/#other-properties","text":"Mappings: prov:generatedAtTime Comments: The time at which an entity was completely created and is available for use.@en","title":"Other properties"},{"location":"hadActivity/","text":"Slot: hadActivity URI: linkml_prov:hadActivity Domain and Range None -> OPT Activity Parents Children Used by ActivityInfluence AgentInfluence Association Attribution Communication Delegation Derivation End EntityInfluence Generation Influence Invalidation PrimarySource Quotation Revision Start Usage Other properties Mappings: prov:hadActivity Comments: The optional Activity of an Influence, which used, generated, invalidated, or was the responsibility of some Entity. This property is not used by ActivityInfluence (use prov:activity instead).@en This property has multiple RDFS domains to suit multiple OWL Profiles. See PROV-O OWL Profile .","title":"Slot: hadActivity"},{"location":"hadActivity/#slot-hadactivity","text":"URI: linkml_prov:hadActivity","title":"Slot: hadActivity"},{"location":"hadActivity/#domain-and-range","text":"None -> OPT Activity","title":"Domain and Range"},{"location":"hadActivity/#parents","text":"","title":"Parents"},{"location":"hadActivity/#children","text":"","title":"Children"},{"location":"hadActivity/#used-by","text":"ActivityInfluence AgentInfluence Association Attribution Communication Delegation Derivation End EntityInfluence Generation Influence Invalidation PrimarySource Quotation Revision Start Usage","title":"Used by"},{"location":"hadActivity/#other-properties","text":"Mappings: prov:hadActivity Comments: The optional Activity of an Influence, which used, generated, invalidated, or was the responsibility of some Entity. This property is not used by ActivityInfluence (use prov:activity instead).@en This property has multiple RDFS domains to suit multiple OWL Profiles. See PROV-O OWL Profile .","title":"Other properties"},{"location":"hadGeneration/","text":"Slot: hadGeneration URI: linkml_prov:hadGeneration Domain and Range None -> OPT Generation Parents Children Used by Derivation PrimarySource Quotation Revision Other properties Mappings: prov:hadGeneration Comments: The optional Generation involved in an Entity's Derivation.@en","title":"Slot: hadGeneration"},{"location":"hadGeneration/#slot-hadgeneration","text":"URI: linkml_prov:hadGeneration","title":"Slot: hadGeneration"},{"location":"hadGeneration/#domain-and-range","text":"None -> OPT Generation","title":"Domain and Range"},{"location":"hadGeneration/#parents","text":"","title":"Parents"},{"location":"hadGeneration/#children","text":"","title":"Children"},{"location":"hadGeneration/#used-by","text":"Derivation PrimarySource Quotation Revision","title":"Used by"},{"location":"hadGeneration/#other-properties","text":"Mappings: prov:hadGeneration Comments: The optional Generation involved in an Entity's Derivation.@en","title":"Other properties"},{"location":"hadMember/","text":"Slot: hadMember URI: linkml_prov:hadMember Domain and Range None -> OPT Entity Parents is_a: wasInfluencedBy Children Used by Collection EmptyCollection Other properties Mappings: prov:hadMember","title":"Slot: hadMember"},{"location":"hadMember/#slot-hadmember","text":"URI: linkml_prov:hadMember","title":"Slot: hadMember"},{"location":"hadMember/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"hadMember/#parents","text":"is_a: wasInfluencedBy","title":"Parents"},{"location":"hadMember/#children","text":"","title":"Children"},{"location":"hadMember/#used-by","text":"Collection EmptyCollection","title":"Used by"},{"location":"hadMember/#other-properties","text":"Mappings: prov:hadMember","title":"Other properties"},{"location":"hadPlan/","text":"Slot: hadPlan URI: linkml_prov:hadPlan Domain and Range None -> OPT Plan Parents Children Used by Association Other properties Mappings: prov:hadPlan Comments: The optional Plan adopted by an Agent in Association with some Activity. Plan specifications are out of the scope of this specification.@en","title":"Slot: hadPlan"},{"location":"hadPlan/#slot-hadplan","text":"URI: linkml_prov:hadPlan","title":"Slot: hadPlan"},{"location":"hadPlan/#domain-and-range","text":"None -> OPT Plan","title":"Domain and Range"},{"location":"hadPlan/#parents","text":"","title":"Parents"},{"location":"hadPlan/#children","text":"","title":"Children"},{"location":"hadPlan/#used-by","text":"Association","title":"Used by"},{"location":"hadPlan/#other-properties","text":"Mappings: prov:hadPlan Comments: The optional Plan adopted by an Agent in Association with some Activity. Plan specifications are out of the scope of this specification.@en","title":"Other properties"},{"location":"hadPrimarySource/","text":"Slot: hadPrimarySource URI: linkml_prov:hadPrimarySource Domain and Range None -> OPT Entity Parents is_a: wasDerivedFrom Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:hadPrimarySource","title":"Slot: hadPrimarySource"},{"location":"hadPrimarySource/#slot-hadprimarysource","text":"URI: linkml_prov:hadPrimarySource","title":"Slot: hadPrimarySource"},{"location":"hadPrimarySource/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"hadPrimarySource/#parents","text":"is_a: wasDerivedFrom","title":"Parents"},{"location":"hadPrimarySource/#children","text":"","title":"Children"},{"location":"hadPrimarySource/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"hadPrimarySource/#other-properties","text":"Mappings: prov:hadPrimarySource","title":"Other properties"},{"location":"hadRole/","text":"Slot: hadRole URI: linkml_prov:hadRole Domain and Range None -> OPT Role Parents Children Used by ActivityInfluence AgentInfluence Association Attribution Communication Delegation Derivation End EntityInfluence Generation Influence InstantaneousEvent Invalidation PrimarySource Quotation Revision Start Usage Other properties Mappings: prov:hadRole Comments: The optional Role that an Entity assumed in the context of an Activity. For example, :baking prov:used :spoon; prov:qualified [ a prov:Usage; prov:entity :spoon; prov:hadRole roles:mixing_implement ].@en This property has multiple RDFS domains to suit multiple OWL Profiles. See PROV-O OWL Profile .","title":"Slot: hadRole"},{"location":"hadRole/#slot-hadrole","text":"URI: linkml_prov:hadRole","title":"Slot: hadRole"},{"location":"hadRole/#domain-and-range","text":"None -> OPT Role","title":"Domain and Range"},{"location":"hadRole/#parents","text":"","title":"Parents"},{"location":"hadRole/#children","text":"","title":"Children"},{"location":"hadRole/#used-by","text":"ActivityInfluence AgentInfluence Association Attribution Communication Delegation Derivation End EntityInfluence Generation Influence InstantaneousEvent Invalidation PrimarySource Quotation Revision Start Usage","title":"Used by"},{"location":"hadRole/#other-properties","text":"Mappings: prov:hadRole Comments: The optional Role that an Entity assumed in the context of an Activity. For example, :baking prov:used :spoon; prov:qualified [ a prov:Usage; prov:entity :spoon; prov:hadRole roles:mixing_implement ].@en This property has multiple RDFS domains to suit multiple OWL Profiles. See PROV-O OWL Profile .","title":"Other properties"},{"location":"hadUsage/","text":"Slot: hadUsage URI: linkml_prov:hadUsage Domain and Range None -> OPT Usage Parents Children Used by Derivation PrimarySource Quotation Revision Other properties Mappings: prov:hadUsage Comments: The optional Usage involved in an Entity's Derivation.@en","title":"Slot: hadUsage"},{"location":"hadUsage/#slot-hadusage","text":"URI: linkml_prov:hadUsage","title":"Slot: hadUsage"},{"location":"hadUsage/#domain-and-range","text":"None -> OPT Usage","title":"Domain and Range"},{"location":"hadUsage/#parents","text":"","title":"Parents"},{"location":"hadUsage/#children","text":"","title":"Children"},{"location":"hadUsage/#used-by","text":"Derivation PrimarySource Quotation Revision","title":"Used by"},{"location":"hadUsage/#other-properties","text":"Mappings: prov:hadUsage Comments: The optional Usage involved in an Entity's Derivation.@en","title":"Other properties"},{"location":"home/","text":"Introduction A data model for describing configurations / stylesheets for visualzing graphs, and in particular Knowledge Graphs or Ontologies. These graphs are characterized by features such as having meaningful edge labels (subClassOf, partOf, developsFrom) node IDs/URIs in addition to names/labels node categories additional rich metadata on the nodes or edges An example of a use of this specification is obographviz The main way in which this specification is intended to be used to to specify stylesheets for graphical applications in the form of a JSON document, so examples here are in JSON These should conform to the JSON-Schema However, other serializations are possible - e.g. RDF. See further on for details Examples Global styling An example of a minimal JSON file instantiating a StyleSheet class: { \"style\": \"filled\", \"fillcolor\": \"green\" } This uses two properties: style fillcolor Each of these properties are mapped to the URIs in the GraphViz documentation These indicate that boxes should be filled and colored green Styling predicates (relations relationProperties maps a set of predicate CURIEs to edge properties: { \"relationProperties\": { \"rdfs:subClassOf\": { \"color\": \"black\", \"penwith\": 3, \"arrowhead\": \"open\", \"label\": \"\" }, \"BFO:0000050\": { \"arrowhead\": \"tee\", \"color\": \"blue\" } } } Graphviz vocabulary","title":"Home"},{"location":"home/#introduction","text":"A data model for describing configurations / stylesheets for visualzing graphs, and in particular Knowledge Graphs or Ontologies. These graphs are characterized by features such as having meaningful edge labels (subClassOf, partOf, developsFrom) node IDs/URIs in addition to names/labels node categories additional rich metadata on the nodes or edges An example of a use of this specification is obographviz The main way in which this specification is intended to be used to to specify stylesheets for graphical applications in the form of a JSON document, so examples here are in JSON These should conform to the JSON-Schema However, other serializations are possible - e.g. RDF. See further on for details","title":"Introduction"},{"location":"home/#examples","text":"","title":"Examples"},{"location":"home/#global-styling","text":"An example of a minimal JSON file instantiating a StyleSheet class: { \"style\": \"filled\", \"fillcolor\": \"green\" } This uses two properties: style fillcolor Each of these properties are mapped to the URIs in the GraphViz documentation These indicate that boxes should be filled and colored green","title":"Global styling"},{"location":"home/#styling-predicates-relations","text":"relationProperties maps a set of predicate CURIEs to edge properties: { \"relationProperties\": { \"rdfs:subClassOf\": { \"color\": \"black\", \"penwith\": 3, \"arrowhead\": \"open\", \"label\": \"\" }, \"BFO:0000050\": { \"arrowhead\": \"tee\", \"color\": \"blue\" } } }","title":"Styling predicates (relations"},{"location":"home/#graphviz-vocabulary","text":"","title":"Graphviz vocabulary"},{"location":"influenced/","text":"Slot: influenced URI: linkml_prov:influenced Domain and Range None -> OPT String Parents Children generated invalidated Used by Other properties Mappings: prov:influenced","title":"Slot: influenced"},{"location":"influenced/#slot-influenced","text":"URI: linkml_prov:influenced","title":"Slot: influenced"},{"location":"influenced/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"influenced/#parents","text":"","title":"Parents"},{"location":"influenced/#children","text":"generated invalidated","title":"Children"},{"location":"influenced/#used-by","text":"","title":"Used by"},{"location":"influenced/#other-properties","text":"Mappings: prov:influenced","title":"Other properties"},{"location":"influencer/","text":"Slot: influencer URI: linkml_prov:influencer Domain and Range None -> OPT Thing Parents Children activity agent entity Used by ActivityInfluence AgentInfluence Association Attribution Communication Delegation Derivation End EntityInfluence Generation Influence Invalidation PrimarySource Quotation Revision Start Usage Other properties Mappings: prov:influencer Comments: Subproperties of prov:influencer are used to cite the object of an unqualified PROV-O triple whose predicate is a subproperty of prov:wasInfluencedBy (e.g. prov:used, prov:wasGeneratedBy). prov:influencer is used much like rdf:object is used.@en","title":"Slot: influencer"},{"location":"influencer/#slot-influencer","text":"URI: linkml_prov:influencer","title":"Slot: influencer"},{"location":"influencer/#domain-and-range","text":"None -> OPT Thing","title":"Domain and Range"},{"location":"influencer/#parents","text":"","title":"Parents"},{"location":"influencer/#children","text":"activity agent entity","title":"Children"},{"location":"influencer/#used-by","text":"ActivityInfluence AgentInfluence Association Attribution Communication Delegation Derivation End EntityInfluence Generation Influence Invalidation PrimarySource Quotation Revision Start Usage","title":"Used by"},{"location":"influencer/#other-properties","text":"Mappings: prov:influencer Comments: Subproperties of prov:influencer are used to cite the object of an unqualified PROV-O triple whose predicate is a subproperty of prov:wasInfluencedBy (e.g. prov:used, prov:wasGeneratedBy). prov:influencer is used much like rdf:object is used.@en","title":"Other properties"},{"location":"invalidated/","text":"Slot: invalidated URI: linkml_prov:invalidated Domain and Range None -> OPT Entity Parents is_a: influenced Children Used by Activity Other properties Mappings: prov:invalidated","title":"Slot: invalidated"},{"location":"invalidated/#slot-invalidated","text":"URI: linkml_prov:invalidated","title":"Slot: invalidated"},{"location":"invalidated/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"invalidated/#parents","text":"is_a: influenced","title":"Parents"},{"location":"invalidated/#children","text":"","title":"Children"},{"location":"invalidated/#used-by","text":"Activity","title":"Used by"},{"location":"invalidated/#other-properties","text":"Mappings: prov:invalidated","title":"Other properties"},{"location":"invalidatedAtTime/","text":"Slot: invalidatedAtTime URI: linkml_prov:invalidatedAtTime Domain and Range None -> OPT String Parents Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:invalidatedAtTime Comments: The time at which an entity was invalidated (i.e., no longer usable).@en","title":"Slot: invalidatedAtTime"},{"location":"invalidatedAtTime/#slot-invalidatedattime","text":"URI: linkml_prov:invalidatedAtTime","title":"Slot: invalidatedAtTime"},{"location":"invalidatedAtTime/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"invalidatedAtTime/#parents","text":"","title":"Parents"},{"location":"invalidatedAtTime/#children","text":"","title":"Children"},{"location":"invalidatedAtTime/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"invalidatedAtTime/#other-properties","text":"Mappings: prov:invalidatedAtTime Comments: The time at which an entity was invalidated (i.e., no longer usable).@en","title":"Other properties"},{"location":"inverse/","text":"Slot: inverse URI: linkml_prov:inverse Domain and Range None -> OPT String Parents Children Used by Other properties Mappings: prov:inverse Comments: PROV-O does not define all property inverses. The directionalities defined in PROV-O should be given preference over those not defined. However, if users wish to name the inverse of a PROV-O property, the local name given by prov:inverse should be used.@en","title":"Slot: inverse"},{"location":"inverse/#slot-inverse","text":"URI: linkml_prov:inverse","title":"Slot: inverse"},{"location":"inverse/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"inverse/#parents","text":"","title":"Parents"},{"location":"inverse/#children","text":"","title":"Children"},{"location":"inverse/#used-by","text":"","title":"Used by"},{"location":"inverse/#other-properties","text":"Mappings: prov:inverse Comments: PROV-O does not define all property inverses. The directionalities defined in PROV-O should be given preference over those not defined. However, if users wish to name the inverse of a PROV-O property, the local name given by prov:inverse should be used.@en","title":"Other properties"},{"location":"isDefinedBy/","text":"Slot: isDefinedBy URI: linkml_prov:isDefinedBy Domain and Range None -> OPT String Parents Children Used by Other properties Mappings: rdfs:isDefinedBy","title":"Slot: isDefinedBy"},{"location":"isDefinedBy/#slot-isdefinedby","text":"URI: linkml_prov:isDefinedBy","title":"Slot: isDefinedBy"},{"location":"isDefinedBy/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"isDefinedBy/#parents","text":"","title":"Parents"},{"location":"isDefinedBy/#children","text":"","title":"Children"},{"location":"isDefinedBy/#used-by","text":"","title":"Used by"},{"location":"isDefinedBy/#other-properties","text":"Mappings: rdfs:isDefinedBy","title":"Other properties"},{"location":"label/","text":"Slot: label URI: linkml_prov:label Domain and Range None -> OPT String Parents Children Used by Other properties Mappings: rdfs:label Comments: @en","title":"Slot: label"},{"location":"label/#slot-label","text":"URI: linkml_prov:label","title":"Slot: label"},{"location":"label/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"label/#parents","text":"","title":"Parents"},{"location":"label/#children","text":"","title":"Children"},{"location":"label/#used-by","text":"","title":"Used by"},{"location":"label/#other-properties","text":"Mappings: rdfs:label Comments: @en","title":"Other properties"},{"location":"n/","text":"Slot: n URI: linkml_prov:n Domain and Range None -> OPT String Parents is_a: seeAlso Children Used by Other properties Mappings: prov:n Comments: A reference to the principal section of the PROV-DM document that describes this concept.@en","title":"Slot: n"},{"location":"n/#slot-n","text":"URI: linkml_prov:n","title":"Slot: n"},{"location":"n/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"n/#parents","text":"is_a: seeAlso","title":"Parents"},{"location":"n/#children","text":"","title":"Children"},{"location":"n/#used-by","text":"","title":"Used by"},{"location":"n/#other-properties","text":"Mappings: prov:n Comments: A reference to the principal section of the PROV-DM document that describes this concept.@en","title":"Other properties"},{"location":"order/","text":"Slot: order URI: linkml_prov:order Domain and Range None -> OPT String Parents Children Used by Other properties Mappings: prov:order Comments: The position that this OWL term should be listed within documentation. The scope of the documentation (e.g., among all terms, among terms within a prov:category, among properties applying to a particular class, etc.) is unspecified.@en","title":"Slot: order"},{"location":"order/#slot-order","text":"URI: linkml_prov:order","title":"Slot: order"},{"location":"order/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"order/#parents","text":"","title":"Parents"},{"location":"order/#children","text":"","title":"Children"},{"location":"order/#used-by","text":"","title":"Used by"},{"location":"order/#other-properties","text":"Mappings: prov:order Comments: The position that this OWL term should be listed within documentation. The scope of the documentation (e.g., among all terms, among terms within a prov:category, among properties applying to a particular class, etc.) is unspecified.@en","title":"Other properties"},{"location":"qualifiedAssociation/","text":"Slot: qualifiedAssociation URI: linkml_prov:qualifiedAssociation Domain and Range None -> OPT Association Parents is_a: qualifiedInfluence Children Used by Activity Other properties Mappings: prov:qualifiedAssociation Comments: If this Activity prov:wasAssociatedWith Agent :ag, then it can qualify the Association using prov:qualifiedAssociation [ a prov:Association; prov:agent :ag; :foo :bar ].@en","title":"Slot: qualifiedAssociation"},{"location":"qualifiedAssociation/#slot-qualifiedassociation","text":"URI: linkml_prov:qualifiedAssociation","title":"Slot: qualifiedAssociation"},{"location":"qualifiedAssociation/#domain-and-range","text":"None -> OPT Association","title":"Domain and Range"},{"location":"qualifiedAssociation/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedAssociation/#children","text":"","title":"Children"},{"location":"qualifiedAssociation/#used-by","text":"Activity","title":"Used by"},{"location":"qualifiedAssociation/#other-properties","text":"Mappings: prov:qualifiedAssociation Comments: If this Activity prov:wasAssociatedWith Agent :ag, then it can qualify the Association using prov:qualifiedAssociation [ a prov:Association; prov:agent :ag; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedAttribution/","text":"Slot: qualifiedAttribution URI: linkml_prov:qualifiedAttribution Domain and Range None -> OPT Attribution Parents is_a: qualifiedInfluence Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:qualifiedAttribution Comments: If this Entity prov:wasAttributedTo Agent :ag, then it can qualify how it was influenced using prov:qualifiedAttribution [ a prov:Attribution; prov:agent :ag; :foo :bar ].@en","title":"Slot: qualifiedAttribution"},{"location":"qualifiedAttribution/#slot-qualifiedattribution","text":"URI: linkml_prov:qualifiedAttribution","title":"Slot: qualifiedAttribution"},{"location":"qualifiedAttribution/#domain-and-range","text":"None -> OPT Attribution","title":"Domain and Range"},{"location":"qualifiedAttribution/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedAttribution/#children","text":"","title":"Children"},{"location":"qualifiedAttribution/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"qualifiedAttribution/#other-properties","text":"Mappings: prov:qualifiedAttribution Comments: If this Entity prov:wasAttributedTo Agent :ag, then it can qualify how it was influenced using prov:qualifiedAttribution [ a prov:Attribution; prov:agent :ag; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedCommunication/","text":"Slot: qualifiedCommunication URI: linkml_prov:qualifiedCommunication Domain and Range None -> OPT Communication Parents is_a: qualifiedInfluence Children Used by Activity Other properties Mappings: prov:qualifiedCommunication Comments: If this Activity prov:wasInformedBy Activity :a, then it can qualify how it was influenced using prov:qualifiedCommunication [ a prov:Communication; prov:activity :a; :foo :bar ].@en","title":"Slot: qualifiedCommunication"},{"location":"qualifiedCommunication/#slot-qualifiedcommunication","text":"URI: linkml_prov:qualifiedCommunication","title":"Slot: qualifiedCommunication"},{"location":"qualifiedCommunication/#domain-and-range","text":"None -> OPT Communication","title":"Domain and Range"},{"location":"qualifiedCommunication/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedCommunication/#children","text":"","title":"Children"},{"location":"qualifiedCommunication/#used-by","text":"Activity","title":"Used by"},{"location":"qualifiedCommunication/#other-properties","text":"Mappings: prov:qualifiedCommunication Comments: If this Activity prov:wasInformedBy Activity :a, then it can qualify how it was influenced using prov:qualifiedCommunication [ a prov:Communication; prov:activity :a; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedDelegation/","text":"Slot: qualifiedDelegation URI: linkml_prov:qualifiedDelegation Domain and Range None -> OPT Delegation Parents is_a: qualifiedInfluence Children Used by Agent Organization Person SoftwareAgent Other properties Mappings: prov:qualifiedDelegation Comments: If this Agent prov:actedOnBehalfOf Agent :ag, then it can qualify how with prov:qualifiedResponsibility [ a prov:Responsibility; prov:agent :ag; :foo :bar ].@en","title":"Slot: qualifiedDelegation"},{"location":"qualifiedDelegation/#slot-qualifieddelegation","text":"URI: linkml_prov:qualifiedDelegation","title":"Slot: qualifiedDelegation"},{"location":"qualifiedDelegation/#domain-and-range","text":"None -> OPT Delegation","title":"Domain and Range"},{"location":"qualifiedDelegation/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedDelegation/#children","text":"","title":"Children"},{"location":"qualifiedDelegation/#used-by","text":"Agent Organization Person SoftwareAgent","title":"Used by"},{"location":"qualifiedDelegation/#other-properties","text":"Mappings: prov:qualifiedDelegation Comments: If this Agent prov:actedOnBehalfOf Agent :ag, then it can qualify how with prov:qualifiedResponsibility [ a prov:Responsibility; prov:agent :ag; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedDerivation/","text":"Slot: qualifiedDerivation URI: linkml_prov:qualifiedDerivation Domain and Range None -> OPT Derivation Parents is_a: qualifiedInfluence Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:qualifiedDerivation Comments: If this Entity prov:wasDerivedFrom Entity :e, then it can qualify how it was derived using prov:qualifiedDerivation [ a prov:Derivation; prov:entity :e; :foo :bar ].@en","title":"Slot: qualifiedDerivation"},{"location":"qualifiedDerivation/#slot-qualifiedderivation","text":"URI: linkml_prov:qualifiedDerivation","title":"Slot: qualifiedDerivation"},{"location":"qualifiedDerivation/#domain-and-range","text":"None -> OPT Derivation","title":"Domain and Range"},{"location":"qualifiedDerivation/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedDerivation/#children","text":"","title":"Children"},{"location":"qualifiedDerivation/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"qualifiedDerivation/#other-properties","text":"Mappings: prov:qualifiedDerivation Comments: If this Entity prov:wasDerivedFrom Entity :e, then it can qualify how it was derived using prov:qualifiedDerivation [ a prov:Derivation; prov:entity :e; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedEnd/","text":"Slot: qualifiedEnd URI: linkml_prov:qualifiedEnd Domain and Range None -> OPT End Parents is_a: qualifiedInfluence Children Used by Activity Other properties Mappings: prov:qualifiedEnd Comments: If this Activity prov:wasEndedBy Entity :e1, then it can qualify how it was ended using prov:qualifiedEnd [ a prov:End; prov:entity :e1; :foo :bar ].@en","title":"Slot: qualifiedEnd"},{"location":"qualifiedEnd/#slot-qualifiedend","text":"URI: linkml_prov:qualifiedEnd","title":"Slot: qualifiedEnd"},{"location":"qualifiedEnd/#domain-and-range","text":"None -> OPT End","title":"Domain and Range"},{"location":"qualifiedEnd/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedEnd/#children","text":"","title":"Children"},{"location":"qualifiedEnd/#used-by","text":"Activity","title":"Used by"},{"location":"qualifiedEnd/#other-properties","text":"Mappings: prov:qualifiedEnd Comments: If this Activity prov:wasEndedBy Entity :e1, then it can qualify how it was ended using prov:qualifiedEnd [ a prov:End; prov:entity :e1; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedForm/","text":"Slot: qualifiedForm URI: linkml_prov:qualifiedForm Domain and Range None -> OPT String Parents is_a: seeAlso Children Used by Other properties Mappings: prov:qualifiedForm Comments: This annotation property links a subproperty of prov:wasInfluencedBy with the subclass of prov:Influence and the qualifying property that are used to qualify it. Example annotation: prov:wasGeneratedBy prov:qualifiedForm prov:qualifiedGeneration, prov:Generation . Then this unqualified assertion: :entity1 prov:wasGeneratedBy :activity1 . can be qualified by adding: :entity1 prov:qualifiedGeneration :entity1Gen . :entity1Gen a prov:Generation, prov:Influence; prov:activity :activity1; :customValue 1337 . Note how the value of the unqualified influence (prov:wasGeneratedBy :activity1) is mirrored as the value of the prov:activity (or prov:entity, or prov:agent) property on the influence class.@en |","title":"Slot: qualifiedForm"},{"location":"qualifiedForm/#slot-qualifiedform","text":"URI: linkml_prov:qualifiedForm","title":"Slot: qualifiedForm"},{"location":"qualifiedForm/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"qualifiedForm/#parents","text":"is_a: seeAlso","title":"Parents"},{"location":"qualifiedForm/#children","text":"","title":"Children"},{"location":"qualifiedForm/#used-by","text":"","title":"Used by"},{"location":"qualifiedForm/#other-properties","text":"Mappings: prov:qualifiedForm Comments: This annotation property links a subproperty of prov:wasInfluencedBy with the subclass of prov:Influence and the qualifying property that are used to qualify it. Example annotation: prov:wasGeneratedBy prov:qualifiedForm prov:qualifiedGeneration, prov:Generation . Then this unqualified assertion: :entity1 prov:wasGeneratedBy :activity1 . can be qualified by adding: :entity1 prov:qualifiedGeneration :entity1Gen . :entity1Gen a prov:Generation, prov:Influence; prov:activity :activity1; :customValue 1337 . Note how the value of the unqualified influence (prov:wasGeneratedBy :activity1) is mirrored as the value of the prov:activity (or prov:entity, or prov:agent) property on the influence class.@en |","title":"Other properties"},{"location":"qualifiedGeneration/","text":"Slot: qualifiedGeneration URI: linkml_prov:qualifiedGeneration Domain and Range None -> OPT Generation Parents is_a: qualifiedInfluence Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:qualifiedGeneration Comments: If this Activity prov:generated Entity :e, then it can qualify how it performed the Generation using prov:qualifiedGeneration [ a prov:Generation; prov:entity :e; :foo :bar ].@en","title":"Slot: qualifiedGeneration"},{"location":"qualifiedGeneration/#slot-qualifiedgeneration","text":"URI: linkml_prov:qualifiedGeneration","title":"Slot: qualifiedGeneration"},{"location":"qualifiedGeneration/#domain-and-range","text":"None -> OPT Generation","title":"Domain and Range"},{"location":"qualifiedGeneration/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedGeneration/#children","text":"","title":"Children"},{"location":"qualifiedGeneration/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"qualifiedGeneration/#other-properties","text":"Mappings: prov:qualifiedGeneration Comments: If this Activity prov:generated Entity :e, then it can qualify how it performed the Generation using prov:qualifiedGeneration [ a prov:Generation; prov:entity :e; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedInfluence/","text":"Slot: qualifiedInfluence URI: linkml_prov:qualifiedInfluence Domain and Range None -> OPT Influence Parents Children qualifiedAssociation qualifiedAttribution qualifiedCommunication qualifiedDelegation qualifiedDerivation qualifiedEnd qualifiedGeneration qualifiedInvalidation qualifiedPrimarySource qualifiedQuotation qualifiedRevision qualifiedStart qualifiedUsage Used by Activity Agent Bundle Collection EmptyCollection Entity Organization Person Plan SoftwareAgent Other properties Mappings: prov:qualifiedInfluence Comments: Because prov:qualifiedInfluence is a broad relation, the more specific relations (qualifiedCommunication, qualifiedDelegation, qualifiedEnd, etc.) should be used when applicable.@en","title":"Slot: qualifiedInfluence"},{"location":"qualifiedInfluence/#slot-qualifiedinfluence","text":"URI: linkml_prov:qualifiedInfluence","title":"Slot: qualifiedInfluence"},{"location":"qualifiedInfluence/#domain-and-range","text":"None -> OPT Influence","title":"Domain and Range"},{"location":"qualifiedInfluence/#parents","text":"","title":"Parents"},{"location":"qualifiedInfluence/#children","text":"qualifiedAssociation qualifiedAttribution qualifiedCommunication qualifiedDelegation qualifiedDerivation qualifiedEnd qualifiedGeneration qualifiedInvalidation qualifiedPrimarySource qualifiedQuotation qualifiedRevision qualifiedStart qualifiedUsage","title":"Children"},{"location":"qualifiedInfluence/#used-by","text":"Activity Agent Bundle Collection EmptyCollection Entity Organization Person Plan SoftwareAgent","title":"Used by"},{"location":"qualifiedInfluence/#other-properties","text":"Mappings: prov:qualifiedInfluence Comments: Because prov:qualifiedInfluence is a broad relation, the more specific relations (qualifiedCommunication, qualifiedDelegation, qualifiedEnd, etc.) should be used when applicable.@en","title":"Other properties"},{"location":"qualifiedInvalidation/","text":"Slot: qualifiedInvalidation URI: linkml_prov:qualifiedInvalidation Domain and Range None -> OPT Invalidation Parents is_a: qualifiedInfluence Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:qualifiedInvalidation Comments: If this Entity prov:wasInvalidatedBy Activity :a, then it can qualify how it was invalidated using prov:qualifiedInvalidation [ a prov:Invalidation; prov:activity :a; :foo :bar ].@en","title":"Slot: qualifiedInvalidation"},{"location":"qualifiedInvalidation/#slot-qualifiedinvalidation","text":"URI: linkml_prov:qualifiedInvalidation","title":"Slot: qualifiedInvalidation"},{"location":"qualifiedInvalidation/#domain-and-range","text":"None -> OPT Invalidation","title":"Domain and Range"},{"location":"qualifiedInvalidation/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedInvalidation/#children","text":"","title":"Children"},{"location":"qualifiedInvalidation/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"qualifiedInvalidation/#other-properties","text":"Mappings: prov:qualifiedInvalidation Comments: If this Entity prov:wasInvalidatedBy Activity :a, then it can qualify how it was invalidated using prov:qualifiedInvalidation [ a prov:Invalidation; prov:activity :a; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedPrimarySource/","text":"Slot: qualifiedPrimarySource URI: linkml_prov:qualifiedPrimarySource Domain and Range None -> OPT PrimarySource Parents is_a: qualifiedInfluence Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:qualifiedPrimarySource Comments: If this Entity prov:hadPrimarySource Entity :e, then it can qualify how using prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :e; :foo :bar ].@en","title":"Slot: qualifiedPrimarySource"},{"location":"qualifiedPrimarySource/#slot-qualifiedprimarysource","text":"URI: linkml_prov:qualifiedPrimarySource","title":"Slot: qualifiedPrimarySource"},{"location":"qualifiedPrimarySource/#domain-and-range","text":"None -> OPT PrimarySource","title":"Domain and Range"},{"location":"qualifiedPrimarySource/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedPrimarySource/#children","text":"","title":"Children"},{"location":"qualifiedPrimarySource/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"qualifiedPrimarySource/#other-properties","text":"Mappings: prov:qualifiedPrimarySource Comments: If this Entity prov:hadPrimarySource Entity :e, then it can qualify how using prov:qualifiedPrimarySource [ a prov:PrimarySource; prov:entity :e; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedQuotation/","text":"Slot: qualifiedQuotation URI: linkml_prov:qualifiedQuotation Domain and Range None -> OPT Quotation Parents is_a: qualifiedInfluence Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:qualifiedQuotation Comments: If this Entity prov:wasQuotedFrom Entity :e, then it can qualify how using prov:qualifiedQuotation [ a prov:Quotation; prov:entity :e; :foo :bar ].@en","title":"Slot: qualifiedQuotation"},{"location":"qualifiedQuotation/#slot-qualifiedquotation","text":"URI: linkml_prov:qualifiedQuotation","title":"Slot: qualifiedQuotation"},{"location":"qualifiedQuotation/#domain-and-range","text":"None -> OPT Quotation","title":"Domain and Range"},{"location":"qualifiedQuotation/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedQuotation/#children","text":"","title":"Children"},{"location":"qualifiedQuotation/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"qualifiedQuotation/#other-properties","text":"Mappings: prov:qualifiedQuotation Comments: If this Entity prov:wasQuotedFrom Entity :e, then it can qualify how using prov:qualifiedQuotation [ a prov:Quotation; prov:entity :e; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedRevision/","text":"Slot: qualifiedRevision URI: linkml_prov:qualifiedRevision Domain and Range None -> OPT Revision Parents is_a: qualifiedInfluence Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:qualifiedRevision Comments: If this Entity prov:wasRevisionOf Entity :e, then it can qualify how it was revised using prov:qualifiedRevision [ a prov:Revision; prov:entity :e; :foo :bar ].@en","title":"Slot: qualifiedRevision"},{"location":"qualifiedRevision/#slot-qualifiedrevision","text":"URI: linkml_prov:qualifiedRevision","title":"Slot: qualifiedRevision"},{"location":"qualifiedRevision/#domain-and-range","text":"None -> OPT Revision","title":"Domain and Range"},{"location":"qualifiedRevision/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedRevision/#children","text":"","title":"Children"},{"location":"qualifiedRevision/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"qualifiedRevision/#other-properties","text":"Mappings: prov:qualifiedRevision Comments: If this Entity prov:wasRevisionOf Entity :e, then it can qualify how it was revised using prov:qualifiedRevision [ a prov:Revision; prov:entity :e; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedStart/","text":"Slot: qualifiedStart URI: linkml_prov:qualifiedStart Domain and Range None -> OPT Start Parents is_a: qualifiedInfluence Children Used by Activity Other properties Mappings: prov:qualifiedStart Comments: If this Activity prov:wasStartedBy Entity :e1, then it can qualify how it was started using prov:qualifiedStart [ a prov:Start; prov:entity :e1; :foo :bar ].@en","title":"Slot: qualifiedStart"},{"location":"qualifiedStart/#slot-qualifiedstart","text":"URI: linkml_prov:qualifiedStart","title":"Slot: qualifiedStart"},{"location":"qualifiedStart/#domain-and-range","text":"None -> OPT Start","title":"Domain and Range"},{"location":"qualifiedStart/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedStart/#children","text":"","title":"Children"},{"location":"qualifiedStart/#used-by","text":"Activity","title":"Used by"},{"location":"qualifiedStart/#other-properties","text":"Mappings: prov:qualifiedStart Comments: If this Activity prov:wasStartedBy Entity :e1, then it can qualify how it was started using prov:qualifiedStart [ a prov:Start; prov:entity :e1; :foo :bar ].@en","title":"Other properties"},{"location":"qualifiedUsage/","text":"Slot: qualifiedUsage URI: linkml_prov:qualifiedUsage Domain and Range None -> OPT Usage Parents is_a: qualifiedInfluence Children Used by Activity Other properties Mappings: prov:qualifiedUsage Comments: If this Activity prov:used Entity :e, then it can qualify how it used it using prov:qualifiedUsage [ a prov:Usage; prov:entity :e; :foo :bar ].@en","title":"Slot: qualifiedUsage"},{"location":"qualifiedUsage/#slot-qualifiedusage","text":"URI: linkml_prov:qualifiedUsage","title":"Slot: qualifiedUsage"},{"location":"qualifiedUsage/#domain-and-range","text":"None -> OPT Usage","title":"Domain and Range"},{"location":"qualifiedUsage/#parents","text":"is_a: qualifiedInfluence","title":"Parents"},{"location":"qualifiedUsage/#children","text":"","title":"Children"},{"location":"qualifiedUsage/#used-by","text":"Activity","title":"Used by"},{"location":"qualifiedUsage/#other-properties","text":"Mappings: prov:qualifiedUsage Comments: If this Activity prov:used Entity :e, then it can qualify how it used it using prov:qualifiedUsage [ a prov:Usage; prov:entity :e; :foo :bar ].@en","title":"Other properties"},{"location":"seeAlso/","text":"Slot: seeAlso URI: linkml_prov:seeAlso Domain and Range None -> OPT String Parents Children aq constraints dm n qualifiedForm sharesDefinitionWith unqualifiedForm Used by Other properties Mappings: rdfs:seeAlso Comments: @en","title":"Slot: seeAlso"},{"location":"seeAlso/#slot-seealso","text":"URI: linkml_prov:seeAlso","title":"Slot: seeAlso"},{"location":"seeAlso/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"seeAlso/#parents","text":"","title":"Parents"},{"location":"seeAlso/#children","text":"aq constraints dm n qualifiedForm sharesDefinitionWith unqualifiedForm","title":"Children"},{"location":"seeAlso/#used-by","text":"","title":"Used by"},{"location":"seeAlso/#other-properties","text":"Mappings: rdfs:seeAlso Comments: @en","title":"Other properties"},{"location":"sharesDefinitionWith/","text":"Slot: sharesDefinitionWith URI: linkml_prov:sharesDefinitionWith Domain and Range None -> OPT String Parents is_a: seeAlso Children Used by Other properties Mappings: prov:sharesDefinitionWith","title":"Slot: sharesDefinitionWith"},{"location":"sharesDefinitionWith/#slot-sharesdefinitionwith","text":"URI: linkml_prov:sharesDefinitionWith","title":"Slot: sharesDefinitionWith"},{"location":"sharesDefinitionWith/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"sharesDefinitionWith/#parents","text":"is_a: seeAlso","title":"Parents"},{"location":"sharesDefinitionWith/#children","text":"","title":"Children"},{"location":"sharesDefinitionWith/#used-by","text":"","title":"Used by"},{"location":"sharesDefinitionWith/#other-properties","text":"Mappings: prov:sharesDefinitionWith","title":"Other properties"},{"location":"specializationOf/","text":"Slot: specializationOf An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en URI: linkml_prov:specializationOf Domain and Range None -> OPT Entity Parents is_a: alternateOf Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:specializationOf","title":"Slot: specializationOf"},{"location":"specializationOf/#slot-specializationof","text":"An entity that is a specialization of another shares all aspects of the latter, and additionally presents more specific aspects of the same thing as the latter. In particular, the lifetime of the entity being specialized contains that of any specialization. Examples of aspects include a time period, an abstraction, and a context associated with the entity.@en URI: linkml_prov:specializationOf","title":"Slot: specializationOf"},{"location":"specializationOf/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"specializationOf/#parents","text":"is_a: alternateOf","title":"Parents"},{"location":"specializationOf/#children","text":"","title":"Children"},{"location":"specializationOf/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"specializationOf/#other-properties","text":"Mappings: prov:specializationOf","title":"Other properties"},{"location":"startedAtTime/","text":"Slot: startedAtTime URI: linkml_prov:startedAtTime Domain and Range None -> OPT String Parents Children Used by Activity Other properties Mappings: prov:startedAtTime Comments: The time at which an activity started. See also prov:endedAtTime.@en","title":"Slot: startedAtTime"},{"location":"startedAtTime/#slot-startedattime","text":"URI: linkml_prov:startedAtTime","title":"Slot: startedAtTime"},{"location":"startedAtTime/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"startedAtTime/#parents","text":"","title":"Parents"},{"location":"startedAtTime/#children","text":"","title":"Children"},{"location":"startedAtTime/#used-by","text":"Activity","title":"Used by"},{"location":"startedAtTime/#other-properties","text":"Mappings: prov:startedAtTime Comments: The time at which an activity started. See also prov:endedAtTime.@en","title":"Other properties"},{"location":"todo/","text":"Slot: todo URI: linkml_prov:todo Domain and Range None -> OPT String Parents Children Used by Other properties Mappings: prov:todo","title":"Slot: todo"},{"location":"todo/#slot-todo","text":"URI: linkml_prov:todo","title":"Slot: todo"},{"location":"todo/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"todo/#parents","text":"","title":"Parents"},{"location":"todo/#children","text":"","title":"Children"},{"location":"todo/#used-by","text":"","title":"Used by"},{"location":"todo/#other-properties","text":"Mappings: prov:todo","title":"Other properties"},{"location":"unqualifiedForm/","text":"Slot: unqualifiedForm URI: linkml_prov:unqualifiedForm Domain and Range None -> OPT String Parents is_a: seeAlso Children Used by Other properties Mappings: prov:unqualifiedForm Comments: Classes and properties used to qualify relationships are annotated with prov:unqualifiedForm to indicate the property used to assert an unqualified provenance relation.@en","title":"Slot: unqualifiedForm"},{"location":"unqualifiedForm/#slot-unqualifiedform","text":"URI: linkml_prov:unqualifiedForm","title":"Slot: unqualifiedForm"},{"location":"unqualifiedForm/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"unqualifiedForm/#parents","text":"is_a: seeAlso","title":"Parents"},{"location":"unqualifiedForm/#children","text":"","title":"Children"},{"location":"unqualifiedForm/#used-by","text":"","title":"Used by"},{"location":"unqualifiedForm/#other-properties","text":"Mappings: prov:unqualifiedForm Comments: Classes and properties used to qualify relationships are annotated with prov:unqualifiedForm to indicate the property used to assert an unqualified provenance relation.@en","title":"Other properties"},{"location":"used/","text":"Slot: used URI: linkml_prov:used Domain and Range None -> OPT Entity Parents is_a: wasInfluencedBy Children Used by Activity Other properties Mappings: prov:used Comments: A prov:Entity that was used by this prov:Activity. For example, :baking prov:used :spoon, :egg, :oven .@en","title":"Slot: used"},{"location":"used/#slot-used","text":"URI: linkml_prov:used","title":"Slot: used"},{"location":"used/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"used/#parents","text":"is_a: wasInfluencedBy","title":"Parents"},{"location":"used/#children","text":"","title":"Children"},{"location":"used/#used-by","text":"Activity","title":"Used by"},{"location":"used/#other-properties","text":"Mappings: prov:used Comments: A prov:Entity that was used by this prov:Activity. For example, :baking prov:used :spoon, :egg, :oven .@en","title":"Other properties"},{"location":"value/","text":"Slot: value Provides a value that is a direct representation of an entity.@en URI: linkml_prov:value Domain and Range None -> OPT String Parents Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:value","title":"Slot: value"},{"location":"value/#slot-value","text":"Provides a value that is a direct representation of an entity.@en URI: linkml_prov:value","title":"Slot: value"},{"location":"value/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"value/#parents","text":"","title":"Parents"},{"location":"value/#children","text":"","title":"Children"},{"location":"value/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"value/#other-properties","text":"Mappings: prov:value","title":"Other properties"},{"location":"versionInfo/","text":"Slot: versionInfo URI: linkml_prov:versionInfo Domain and Range None -> OPT String Parents Children Used by Other properties Mappings: owl:versionInfo","title":"Slot: versionInfo"},{"location":"versionInfo/#slot-versioninfo","text":"URI: linkml_prov:versionInfo","title":"Slot: versionInfo"},{"location":"versionInfo/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"versionInfo/#parents","text":"","title":"Parents"},{"location":"versionInfo/#children","text":"","title":"Children"},{"location":"versionInfo/#used-by","text":"","title":"Used by"},{"location":"versionInfo/#other-properties","text":"Mappings: owl:versionInfo","title":"Other properties"},{"location":"wasAssociatedWith/","text":"Slot: wasAssociatedWith URI: linkml_prov:wasAssociatedWith Domain and Range None -> OPT Agent Parents is_a: wasInfluencedBy Children Used by Activity Other properties Mappings: prov:wasAssociatedWith Comments: An prov:Agent that had some (unspecified) responsibility for the occurrence of this prov:Activity.@en","title":"Slot: wasAssociatedWith"},{"location":"wasAssociatedWith/#slot-wasassociatedwith","text":"URI: linkml_prov:wasAssociatedWith","title":"Slot: wasAssociatedWith"},{"location":"wasAssociatedWith/#domain-and-range","text":"None -> OPT Agent","title":"Domain and Range"},{"location":"wasAssociatedWith/#parents","text":"is_a: wasInfluencedBy","title":"Parents"},{"location":"wasAssociatedWith/#children","text":"","title":"Children"},{"location":"wasAssociatedWith/#used-by","text":"Activity","title":"Used by"},{"location":"wasAssociatedWith/#other-properties","text":"Mappings: prov:wasAssociatedWith Comments: An prov:Agent that had some (unspecified) responsibility for the occurrence of this prov:Activity.@en","title":"Other properties"},{"location":"wasAttributedTo/","text":"Slot: wasAttributedTo Attribution is the ascribing of an entity to an agent.@en URI: linkml_prov:wasAttributedTo Domain and Range None -> OPT Agent Parents is_a: wasInfluencedBy Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:wasAttributedTo Comments: Attribution is the ascribing of an entity to an agent.@en","title":"Slot: wasAttributedTo"},{"location":"wasAttributedTo/#slot-wasattributedto","text":"Attribution is the ascribing of an entity to an agent.@en URI: linkml_prov:wasAttributedTo","title":"Slot: wasAttributedTo"},{"location":"wasAttributedTo/#domain-and-range","text":"None -> OPT Agent","title":"Domain and Range"},{"location":"wasAttributedTo/#parents","text":"is_a: wasInfluencedBy","title":"Parents"},{"location":"wasAttributedTo/#children","text":"","title":"Children"},{"location":"wasAttributedTo/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"wasAttributedTo/#other-properties","text":"Mappings: prov:wasAttributedTo Comments: Attribution is the ascribing of an entity to an agent.@en","title":"Other properties"},{"location":"wasDerivedFrom/","text":"Slot: wasDerivedFrom A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en URI: linkml_prov:wasDerivedFrom Domain and Range None -> OPT Entity Parents is_a: wasInfluencedBy Children hadPrimarySource wasQuotedFrom wasRevisionOf Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:wasDerivedFrom Comments: The more specific subproperties of prov:wasDerivedFrom (i.e., prov:wasQuotedFrom, prov:wasRevisionOf, prov:hadPrimarySource) should be used when applicable.@en","title":"Slot: wasDerivedFrom"},{"location":"wasDerivedFrom/#slot-wasderivedfrom","text":"A derivation is a transformation of an entity into another, an update of an entity resulting in a new one, or the construction of a new entity based on a pre-existing entity.@en URI: linkml_prov:wasDerivedFrom","title":"Slot: wasDerivedFrom"},{"location":"wasDerivedFrom/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"wasDerivedFrom/#parents","text":"is_a: wasInfluencedBy","title":"Parents"},{"location":"wasDerivedFrom/#children","text":"hadPrimarySource wasQuotedFrom wasRevisionOf","title":"Children"},{"location":"wasDerivedFrom/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"wasDerivedFrom/#other-properties","text":"Mappings: prov:wasDerivedFrom Comments: The more specific subproperties of prov:wasDerivedFrom (i.e., prov:wasQuotedFrom, prov:wasRevisionOf, prov:hadPrimarySource) should be used when applicable.@en","title":"Other properties"},{"location":"wasEndedBy/","text":"Slot: wasEndedBy URI: linkml_prov:wasEndedBy Domain and Range None -> OPT Entity Parents is_a: wasInfluencedBy Children Used by Activity Other properties Mappings: prov:wasEndedBy Comments: End is when an activity is deemed to have ended. An end may refer to an entity, known as trigger, that terminated the activity.@en","title":"Slot: wasEndedBy"},{"location":"wasEndedBy/#slot-wasendedby","text":"URI: linkml_prov:wasEndedBy","title":"Slot: wasEndedBy"},{"location":"wasEndedBy/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"wasEndedBy/#parents","text":"is_a: wasInfluencedBy","title":"Parents"},{"location":"wasEndedBy/#children","text":"","title":"Children"},{"location":"wasEndedBy/#used-by","text":"Activity","title":"Used by"},{"location":"wasEndedBy/#other-properties","text":"Mappings: prov:wasEndedBy Comments: End is when an activity is deemed to have ended. An end may refer to an entity, known as trigger, that terminated the activity.@en","title":"Other properties"},{"location":"wasGeneratedBy/","text":"Slot: wasGeneratedBy URI: linkml_prov:wasGeneratedBy Domain and Range None -> OPT Activity Parents is_a: wasInfluencedBy Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:wasGeneratedBy","title":"Slot: wasGeneratedBy"},{"location":"wasGeneratedBy/#slot-wasgeneratedby","text":"URI: linkml_prov:wasGeneratedBy","title":"Slot: wasGeneratedBy"},{"location":"wasGeneratedBy/#domain-and-range","text":"None -> OPT Activity","title":"Domain and Range"},{"location":"wasGeneratedBy/#parents","text":"is_a: wasInfluencedBy","title":"Parents"},{"location":"wasGeneratedBy/#children","text":"","title":"Children"},{"location":"wasGeneratedBy/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"wasGeneratedBy/#other-properties","text":"Mappings: prov:wasGeneratedBy","title":"Other properties"},{"location":"wasInfluencedBy/","text":"Slot: wasInfluencedBy URI: linkml_prov:wasInfluencedBy Domain and Range None -> OPT String Parents Children actedOnBehalfOf hadMember used wasAssociatedWith wasAttributedTo wasDerivedFrom wasEndedBy wasGeneratedBy wasInformedBy wasInvalidatedBy wasStartedBy Used by Activity Agent Bundle Collection EmptyCollection Entity Organization Person Plan SoftwareAgent Other properties Mappings: prov:wasInfluencedBy Comments: Because prov:wasInfluencedBy is a broad relation, its more specific subproperties (e.g. prov:wasInformedBy, prov:actedOnBehalfOf, prov:wasEndedBy, etc.) should be used when applicable.@en This property has multiple RDFS domains to suit multiple OWL Profiles. See PROV-O OWL Profile .","title":"Slot: wasInfluencedBy"},{"location":"wasInfluencedBy/#slot-wasinfluencedby","text":"URI: linkml_prov:wasInfluencedBy","title":"Slot: wasInfluencedBy"},{"location":"wasInfluencedBy/#domain-and-range","text":"None -> OPT String","title":"Domain and Range"},{"location":"wasInfluencedBy/#parents","text":"","title":"Parents"},{"location":"wasInfluencedBy/#children","text":"actedOnBehalfOf hadMember used wasAssociatedWith wasAttributedTo wasDerivedFrom wasEndedBy wasGeneratedBy wasInformedBy wasInvalidatedBy wasStartedBy","title":"Children"},{"location":"wasInfluencedBy/#used-by","text":"Activity Agent Bundle Collection EmptyCollection Entity Organization Person Plan SoftwareAgent","title":"Used by"},{"location":"wasInfluencedBy/#other-properties","text":"Mappings: prov:wasInfluencedBy Comments: Because prov:wasInfluencedBy is a broad relation, its more specific subproperties (e.g. prov:wasInformedBy, prov:actedOnBehalfOf, prov:wasEndedBy, etc.) should be used when applicable.@en This property has multiple RDFS domains to suit multiple OWL Profiles. See PROV-O OWL Profile .","title":"Other properties"},{"location":"wasInformedBy/","text":"Slot: wasInformedBy URI: linkml_prov:wasInformedBy Domain and Range None -> OPT Activity Parents is_a: wasInfluencedBy Children Used by Activity Other properties Mappings: prov:wasInformedBy Comments: An activity a2 is dependent on or informed by another activity a1, by way of some unspecified entity that is generated by a1 and used by a2.@en","title":"Slot: wasInformedBy"},{"location":"wasInformedBy/#slot-wasinformedby","text":"URI: linkml_prov:wasInformedBy","title":"Slot: wasInformedBy"},{"location":"wasInformedBy/#domain-and-range","text":"None -> OPT Activity","title":"Domain and Range"},{"location":"wasInformedBy/#parents","text":"is_a: wasInfluencedBy","title":"Parents"},{"location":"wasInformedBy/#children","text":"","title":"Children"},{"location":"wasInformedBy/#used-by","text":"Activity","title":"Used by"},{"location":"wasInformedBy/#other-properties","text":"Mappings: prov:wasInformedBy Comments: An activity a2 is dependent on or informed by another activity a1, by way of some unspecified entity that is generated by a1 and used by a2.@en","title":"Other properties"},{"location":"wasInvalidatedBy/","text":"Slot: wasInvalidatedBy URI: linkml_prov:wasInvalidatedBy Domain and Range None -> OPT Activity Parents is_a: wasInfluencedBy Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:wasInvalidatedBy","title":"Slot: wasInvalidatedBy"},{"location":"wasInvalidatedBy/#slot-wasinvalidatedby","text":"URI: linkml_prov:wasInvalidatedBy","title":"Slot: wasInvalidatedBy"},{"location":"wasInvalidatedBy/#domain-and-range","text":"None -> OPT Activity","title":"Domain and Range"},{"location":"wasInvalidatedBy/#parents","text":"is_a: wasInfluencedBy","title":"Parents"},{"location":"wasInvalidatedBy/#children","text":"","title":"Children"},{"location":"wasInvalidatedBy/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"wasInvalidatedBy/#other-properties","text":"Mappings: prov:wasInvalidatedBy","title":"Other properties"},{"location":"wasQuotedFrom/","text":"Slot: wasQuotedFrom URI: linkml_prov:wasQuotedFrom Domain and Range None -> OPT Entity Parents is_a: wasDerivedFrom Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:wasQuotedFrom Comments: An entity is derived from an original entity by copying, or 'quoting', some or all of it.@en","title":"Slot: wasQuotedFrom"},{"location":"wasQuotedFrom/#slot-wasquotedfrom","text":"URI: linkml_prov:wasQuotedFrom","title":"Slot: wasQuotedFrom"},{"location":"wasQuotedFrom/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"wasQuotedFrom/#parents","text":"is_a: wasDerivedFrom","title":"Parents"},{"location":"wasQuotedFrom/#children","text":"","title":"Children"},{"location":"wasQuotedFrom/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"wasQuotedFrom/#other-properties","text":"Mappings: prov:wasQuotedFrom Comments: An entity is derived from an original entity by copying, or 'quoting', some or all of it.@en","title":"Other properties"},{"location":"wasRevisionOf/","text":"Slot: wasRevisionOf URI: linkml_prov:wasRevisionOf Domain and Range None -> OPT Entity Parents is_a: wasDerivedFrom Children Used by Bundle Collection EmptyCollection Entity Plan Other properties Mappings: prov:wasRevisionOf Comments: A revision is a derivation that revises an entity into a revised version.@en","title":"Slot: wasRevisionOf"},{"location":"wasRevisionOf/#slot-wasrevisionof","text":"URI: linkml_prov:wasRevisionOf","title":"Slot: wasRevisionOf"},{"location":"wasRevisionOf/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"wasRevisionOf/#parents","text":"is_a: wasDerivedFrom","title":"Parents"},{"location":"wasRevisionOf/#children","text":"","title":"Children"},{"location":"wasRevisionOf/#used-by","text":"Bundle Collection EmptyCollection Entity Plan","title":"Used by"},{"location":"wasRevisionOf/#other-properties","text":"Mappings: prov:wasRevisionOf Comments: A revision is a derivation that revises an entity into a revised version.@en","title":"Other properties"},{"location":"wasStartedBy/","text":"Slot: wasStartedBy URI: linkml_prov:wasStartedBy Domain and Range None -> OPT Entity Parents is_a: wasInfluencedBy Children Used by Activity Other properties Mappings: prov:wasStartedBy Comments: Start is when an activity is deemed to have started. A start may refer to an entity, known as trigger, that initiated the activity.@en","title":"Slot: wasStartedBy"},{"location":"wasStartedBy/#slot-wasstartedby","text":"URI: linkml_prov:wasStartedBy","title":"Slot: wasStartedBy"},{"location":"wasStartedBy/#domain-and-range","text":"None -> OPT Entity","title":"Domain and Range"},{"location":"wasStartedBy/#parents","text":"is_a: wasInfluencedBy","title":"Parents"},{"location":"wasStartedBy/#children","text":"","title":"Children"},{"location":"wasStartedBy/#used-by","text":"Activity","title":"Used by"},{"location":"wasStartedBy/#other-properties","text":"Mappings: prov:wasStartedBy Comments: Start is when an activity is deemed to have started. A start may refer to an entity, known as trigger, that initiated the activity.@en","title":"Other properties"}]}